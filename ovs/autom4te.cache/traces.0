m4trace:/usr/share/aclocal/size_max.m4:9: -1- AC_DEFUN([gl_SIZE_MAX], [
  AC_CHECK_HEADERS([stdint.h])
  dnl First test whether the system already has SIZE_MAX.
  AC_CACHE_CHECK([for SIZE_MAX], [gl_cv_size_max], [
    gl_cv_size_max=
    AC_EGREP_CPP([Found it], [
#include <limits.h>
#if HAVE_STDINT_H
#include <stdint.h>
#endif
#ifdef SIZE_MAX
Found it
#endif
], [gl_cv_size_max=yes])
    if test -z "$gl_cv_size_max"; then
      dnl Define it ourselves. Here we assume that the type 'size_t' is not wider
      dnl than the type 'unsigned long'. Try hard to find a definition that can
      dnl be used in a preprocessor #if, i.e. doesn't contain a cast.
      AC_COMPUTE_INT([size_t_bits_minus_1], [sizeof (size_t) * CHAR_BIT - 1],
        [#include <stddef.h>
#include <limits.h>], [size_t_bits_minus_1=])
      AC_COMPUTE_INT([fits_in_uint], [sizeof (size_t) <= sizeof (unsigned int)],
        [#include <stddef.h>], [fits_in_uint=])
      if test -n "$size_t_bits_minus_1" && test -n "$fits_in_uint"; then
        if test $fits_in_uint = 1; then
          dnl Even though SIZE_MAX fits in an unsigned int, it must be of type
          dnl 'unsigned long' if the type 'size_t' is the same as 'unsigned long'.
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
               [[#include <stddef.h>
                 extern size_t foo;
                 extern unsigned long foo;
               ]],
               [[]])],
            [fits_in_uint=0])
        fi
        dnl We cannot use 'expr' to simplify this expression, because 'expr'
        dnl works only with 'long' integers in the host environment, while we
        dnl might be cross-compiling from a 32-bit platform to a 64-bit platform.
        if test $fits_in_uint = 1; then
          gl_cv_size_max="(((1U << $size_t_bits_minus_1) - 1) * 2 + 1)"
        else
          gl_cv_size_max="(((1UL << $size_t_bits_minus_1) - 1) * 2 + 1)"
        fi
      else
        dnl Shouldn't happen, but who knows...
        gl_cv_size_max='((size_t)~(size_t)0)'
      fi
    fi
  ])
  if test "$gl_cv_size_max" != yes; then
    AC_DEFINE_UNQUOTED([SIZE_MAX], [$gl_cv_size_max],
      [Define as the maximum value of type 'size_t', if the system doesn't define it.])
  fi
  dnl Don't redefine SIZE_MAX in config.h if config.h is re-included after
  dnl <stdint.h>. Remember that the #undef in AH_VERBATIM gets replaced with
  dnl #define by AC_DEFINE_UNQUOTED.
  AH_VERBATIM([SIZE_MAX],
[/* Define as the maximum value of type 'size_t', if the system doesn't define
   it. */
#ifndef SIZE_MAX
# undef SIZE_MAX
#endif])
])
m4trace:/usr/share/aclocal-1.15/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.15'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.15.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.15/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.15.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.15/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.15/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.15/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.15/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.15/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.15/depout.m4:12: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "$am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.15/depout.m4:71: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.15/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <http://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.15/init.m4:186: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.15/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.15/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.15/make.m4:12: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from 'make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.15/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.15/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.15/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.15/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.15/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.15/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.15/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.15/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.15/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.15/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.15/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.15/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.15/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.15/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.15/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/absolute-header.m4:22: -1- AC_DEFUN([gl_ABSOLUTE_HEADER], [AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PREPROC_REQUIRE()dnl
dnl FIXME: gl_absolute_header and ac_header_exists must be used unquoted
dnl until we can assume autoconf 2.64 or newer.
m4_foreach_w([gl_HEADER_NAME], [$1],
  [AS_VAR_PUSHDEF([gl_absolute_header],
                  [gl_cv_absolute_]m4_defn([gl_HEADER_NAME]))dnl
  AC_CACHE_CHECK([absolute name of <]m4_defn([gl_HEADER_NAME])[>],
    m4_defn([gl_absolute_header]),
    [AS_VAR_PUSHDEF([ac_header_exists],
                    [ac_cv_header_]m4_defn([gl_HEADER_NAME]))dnl
    AC_CHECK_HEADERS_ONCE(m4_defn([gl_HEADER_NAME]))dnl
    if test AS_VAR_GET(ac_header_exists) = yes; then
      gl_ABSOLUTE_HEADER_ONE(m4_defn([gl_HEADER_NAME]))
    fi
    AS_VAR_POPDEF([ac_header_exists])dnl
    ])dnl
  AC_DEFINE_UNQUOTED(AS_TR_CPP([ABSOLUTE_]m4_defn([gl_HEADER_NAME])),
                     ["AS_VAR_GET(gl_absolute_header)"],
                     [Define this to an absolute name of <]m4_defn([gl_HEADER_NAME])[>.])
  AS_VAR_POPDEF([gl_absolute_header])dnl
])dnl
])
m4trace:m4/absolute-header.m4:54: -1- AC_DEFUN([gl_ABSOLUTE_HEADER_ONE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_LANG_CONFTEST([AC_LANG_SOURCE([[#include <]]m4_dquote([$1])[[>]])])
  dnl AIX "xlc -E" and "cc -E" omit #line directives for header files
  dnl that contain only a #include of other header files and no
  dnl non-comment tokens of their own. This leads to a failure to
  dnl detect the absolute name of <dirent.h>, <signal.h>, <poll.h>
  dnl and others. The workaround is to force preservation of comments
  dnl through option -C. This ensures all necessary #line directives
  dnl are present. GCC supports option -C as well.
  case "$host_os" in
    aix*) gl_absname_cpp="$ac_cpp -C" ;;
    *)    gl_absname_cpp="$ac_cpp" ;;
  esac
changequote(,)
  case "$host_os" in
    (mingw*|msys*)
      dnl For the sake of native Windows compilers (excluding gcc),
      dnl treat backslash as a directory separator, like /.
      dnl Actually, these compilers use a double-backslash as
      dnl directory separator, inside the
      dnl   # line "filename"
      dnl directives.
      gl_dirsep_regex='[/\\]'
      ;;
    *)
      gl_dirsep_regex='\/'
      ;;
  esac
  dnl A sed expression that turns a string into a basic regular
  dnl expression, for use within "/.../".
  gl_make_literal_regex_sed='s,[]$^\\.*/[],\\&,g'
  gl_header_literal_regex=`echo '$1' \
                           | sed -e "$gl_make_literal_regex_sed"`
  gl_absolute_header_sed="/${gl_dirsep_regex}${gl_header_literal_regex}/"'{
      s/.*"\(.*'"${gl_dirsep_regex}${gl_header_literal_regex}"'\)".*/\1/
      s|^/[^/]|//&|
      p
      q
    }'
changequote([,])
  dnl eval is necessary to expand gl_absname_cpp.
  dnl Ultrix and Pyramid sh refuse to redirect output of eval,
  dnl so use subshell.
  AS_VAR_SET([gl_cv_absolute_]AS_TR_SH([[$1]]),
[`(eval "$gl_absname_cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD |
  sed -n "$gl_absolute_header_sed"`])
])
m4trace:m4/ax_check_openssl.m4:38: -1- AU_DEFUN([CHECK_SSL], [m4_if($#, 0, [AX_CHECK_OPENSSL], [AX_CHECK_OPENSSL($@)])])
m4trace:m4/ax_check_openssl.m4:38: -1- AC_DEFUN([CHECK_SSL], [AC_DIAGNOSE([obsolete], [The macro `CHECK_SSL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_CHECK_OPENSSL], [AX_CHECK_OPENSSL($@)])])
m4trace:m4/ax_check_openssl.m4:39: -1- AC_DEFUN([AX_CHECK_OPENSSL], [
    found=false
    AC_ARG_WITH([openssl],
        [AS_HELP_STRING([--with-openssl=DIR],
            [root of the OpenSSL directory])],
        [
            case "$withval" in
            "" | y | ye | yes | n | no)
            AC_MSG_ERROR([Invalid --with-openssl value])
              ;;
            *) ssldirs="$withval"
              ;;
            esac
        ], [
            # if pkg-config is installed and openssl has installed a .pc file,
            # then use that information and don't search ssldirs
            AC_PATH_PROG([PKG_CONFIG], [pkg-config])
            if test x"$PKG_CONFIG" != x""; then
                SSL_LDFLAGS=`$PKG_CONFIG openssl --libs-only-L 2>/dev/null`
                if test $? = 0; then
                    SSL_LIBS=`$PKG_CONFIG openssl --libs-only-l 2>/dev/null`
                    SSL_INCLUDES=`$PKG_CONFIG openssl --cflags-only-I 2>/dev/null`
                    found=true
                fi
            fi

            # no such luck; use some default ssldirs
            if ! $found; then
                ssldirs="/usr/local/ssl /usr/lib/ssl /usr/ssl /usr/pkg /usr/local /usr"
            fi
        ]
        )


    # note that we #include <openssl/foo.h>, so the OpenSSL headers have to be in
    # an 'openssl' subdirectory

    if ! $found; then
        SSL_INCLUDES=
        for ssldir in $ssldirs; do
            AC_MSG_CHECKING([for openssl/ssl.h in $ssldir])
            if test -f "$ssldir/include/openssl/ssl.h"; then
                SSL_INCLUDES="-I$ssldir/include"
                SSL_LDFLAGS="-L$ssldir/lib"
                if test "$WIN32" = "yes"; then
                    SSL_LIBS="-lssleay32 -llibeay32"
                    SSL_DIR=/$(echo ${ssldir} | ${SED} -e 's/://')
                else
                    SSL_LIBS="-lssl -lcrypto"
                    SSL_DIR="$ssldir"
                fi
                found=true
                AC_MSG_RESULT([yes])
                break
            else
                AC_MSG_RESULT([no])
            fi
        done

        # if the file wasn't found, well, go ahead and try the link anyway -- maybe
        # it will just work!
    fi

    # try the preprocessor and linker with our new flags,
    # being careful not to pollute the global LIBS, LDFLAGS, and CPPFLAGS

    AC_MSG_CHECKING([whether compiling and linking against OpenSSL works])
    echo "Trying link with SSL_LDFLAGS=$SSL_LDFLAGS;" \
        "SSL_LIBS=$SSL_LIBS; SSL_INCLUDES=$SSL_INCLUDES" >&AS_MESSAGE_LOG_FD

    save_LIBS="$LIBS"
    save_LDFLAGS="$LDFLAGS"
    save_CPPFLAGS="$CPPFLAGS"
    LDFLAGS="$LDFLAGS $SSL_LDFLAGS"
    LIBS="$SSL_LIBS $LIBS"
    CPPFLAGS="$SSL_INCLUDES $CPPFLAGS"
    AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([#include <openssl/ssl.h>],
            [SSL_CTX *ctx=NULL;SSL_new(ctx)])],
        [
            AC_MSG_RESULT([yes])
            $1
        ], [
            AC_MSG_RESULT([no])
            $2
        ])
    CPPFLAGS="$save_CPPFLAGS"
    LDFLAGS="$save_LDFLAGS"
    LIBS="$save_LIBS"

    AC_SUBST([SSL_INCLUDES])
    AC_SUBST([SSL_LIBS])
    AC_SUBST([SSL_LDFLAGS])
    AC_SUBST([SSL_DIR])
])
m4trace:m4/ax_cxx_compile_stdcxx.m4:49: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl
  m4_if([$1], [11], [ax_cxx_compile_alternatives="11 0x"],
        [$1], [14], [ax_cxx_compile_alternatives="14 1y"],
        [$1], [17], [ax_cxx_compile_alternatives="17 1z"],
        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$2], [], [],
        [$2], [ext], [],
        [$2], [noext], [],
        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],
        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],
        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],
        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])
  AC_LANG_PUSH([C++])dnl
  ac_success=no
  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,
  ax_cv_cxx_compile_cxx$1,
  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
    [ax_cv_cxx_compile_cxx$1=yes],
    [ax_cv_cxx_compile_cxx$1=no])])
  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then
    ac_success=yes
  fi

  m4_if([$2], [noext], [], [dnl
  if test x$ac_success = xno; then
    for alternative in ${ax_cxx_compile_alternatives}; do
      switch="-std=gnu++${alternative}"
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])

  m4_if([$2], [ext], [], [dnl
  if test x$ac_success = xno; then
    dnl HP's aCC needs +std=c++11 according to:
    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf
    dnl Cray's crayCC needs "-h std=c++11"
    for alternative in ${ax_cxx_compile_alternatives}; do
      for switch in -std=c++${alternative} +std=c++${alternative} "-h std=c++${alternative}"; do
        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                       $cachevar,
          [ac_save_CXX="$CXX"
           CXX="$CXX $switch"
           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
            [eval $cachevar=yes],
            [eval $cachevar=no])
           CXX="$ac_save_CXX"])
        if eval test x\$$cachevar = xyes; then
          CXX="$CXX $switch"
          if test -n "$CXXCPP" ; then
            CXXCPP="$CXXCPP $switch"
          fi
          ac_success=yes
          break
        fi
      done
      if test x$ac_success = xyes; then
        break
      fi
    done
  fi])
  AC_LANG_POP([C++])
  if test x$ax_cxx_compile_cxx$1_required = xtrue; then
    if test x$ac_success = xno; then
      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])
    fi
  fi
  if test x$ac_success = xno; then
    HAVE_CXX$1=0
    AC_MSG_NOTICE([No compiler with C++$1 support was found])
  else
    HAVE_CXX$1=1
    AC_DEFINE(HAVE_CXX$1,1,
              [define if the compiler supports basic C++$1 syntax])
  fi
  AC_SUBST(HAVE_CXX$1)
  m4_if([$1], [17], [AC_MSG_WARN([C++17 is not yet standardized, so the checks may change in incompatible ways anytime])])
])
m4trace:m4/ax_func_posix_memalign.m4:27: -1- AC_DEFUN([AX_FUNC_POSIX_MEMALIGN], [AC_CACHE_CHECK([for working posix_memalign],
  [ax_cv_func_posix_memalign_works],
  [AC_TRY_RUN([
#include <stdlib.h>

int
main ()
{
  void *buffer;

  /* Some versions of glibc incorrectly perform the alignment check on
   * the size word. */
  exit (posix_memalign (&buffer, sizeof(void *), 123) != 0);
}
    ],
    [ax_cv_func_posix_memalign_works=yes],
    [ax_cv_func_posix_memalign_works=no],
    [ax_cv_func_posix_memalign_works=no])])
if test "$ax_cv_func_posix_memalign_works" = "yes" ; then
  AC_DEFINE([HAVE_POSIX_MEMALIGN], [1],
    [Define to 1 if `posix_memalign' works.])
fi
])
m4trace:m4/include_next.m4:35: -1- AC_DEFUN([gl_INCLUDE_NEXT], [
  AC_LANG_PREPROC_REQUIRE()
  AC_CACHE_CHECK([whether the preprocessor supports include_next],
    [gl_cv_have_include_next],
    [rm -rf conftestd1a conftestd1b conftestd2
     mkdir conftestd1a conftestd1b conftestd2
     dnl IBM C 9.0, 10.1 (original versions, prior to the 2009-01 updates) on
     dnl AIX 6.1 support include_next when used as first preprocessor directive
     dnl in a file, but not when preceded by another include directive. Check
     dnl for this bug by including <stdio.h>.
     dnl Additionally, with this same compiler, include_next is a no-op when
     dnl used in a header file that was included by specifying its absolute
     dnl file name. Despite these two bugs, include_next is used in the
     dnl compiler's <math.h>. By virtue of the second bug, we need to use
     dnl include_next as well in this case.
     cat <<EOF > conftestd1a/conftest.h
#define DEFINED_IN_CONFTESTD1
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd1b/conftest.h
#define DEFINED_IN_CONFTESTD1
#include <stdio.h>
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd2/conftest.h
#ifndef DEFINED_IN_CONFTESTD1
#error "include_next test doesn't work"
#endif
#define DEFINED_IN_CONFTESTD2
EOF
     gl_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1b -Iconftestd2"
dnl We intentionally avoid using AC_LANG_SOURCE here.
     AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
       [gl_cv_have_include_next=yes],
       [CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1a -Iconftestd2"
        AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
          [gl_cv_have_include_next=buggy],
          [gl_cv_have_include_next=no])
       ])
     CPPFLAGS="$gl_save_CPPFLAGS"
     rm -rf conftestd1a conftestd1b conftestd2
    ])
  PRAGMA_SYSTEM_HEADER=
  if test $gl_cv_have_include_next = yes; then
    INCLUDE_NEXT=include_next
    INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    if test -n "$GCC"; then
      PRAGMA_SYSTEM_HEADER='#pragma GCC system_header'
    fi
  else
    if test $gl_cv_have_include_next = buggy; then
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    else
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include
    fi
  fi
  AC_SUBST([INCLUDE_NEXT])
  AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
  AC_SUBST([PRAGMA_SYSTEM_HEADER])
  AC_CACHE_CHECK([whether system header files limit the line length],
    [gl_cv_pragma_columns],
    [dnl HP NonStop systems, which define __TANDEM, have this misfeature.
     AC_EGREP_CPP([choke me],
       [
#ifdef __TANDEM
choke me
#endif
       ],
       [gl_cv_pragma_columns=yes],
       [gl_cv_pragma_columns=no])
    ])
  if test $gl_cv_pragma_columns = yes; then
    PRAGMA_COLUMNS="#pragma COLUMNS 10000"
  else
    PRAGMA_COLUMNS=
  fi
  AC_SUBST([PRAGMA_COLUMNS])
])
m4trace:m4/include_next.m4:153: -1- AC_DEFUN([gl_CHECK_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [check])
])
m4trace:m4/include_next.m4:163: -1- AC_DEFUN([gl_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [assume])
])
m4trace:m4/include_next.m4:169: -1- AC_DEFUN([gl_NEXT_HEADERS_INTERNAL], [
  AC_REQUIRE([gl_INCLUDE_NEXT])
  AC_REQUIRE([AC_CANONICAL_HOST])

  m4_if([$2], [check],
    [AC_CHECK_HEADERS_ONCE([$1])
    ])

dnl FIXME: gl_next_header and gl_header_exists must be used unquoted
dnl until we can assume autoconf 2.64 or newer.
  m4_foreach_w([gl_HEADER_NAME], [$1],
    [AS_VAR_PUSHDEF([gl_next_header],
                    [gl_cv_next_]m4_defn([gl_HEADER_NAME]))
     if test $gl_cv_have_include_next = yes; then
       AS_VAR_SET(gl_next_header, ['<'gl_HEADER_NAME'>'])
     else
       AC_CACHE_CHECK(
         [absolute name of <]m4_defn([gl_HEADER_NAME])[>],
         m4_defn([gl_next_header]),
         [m4_if([$2], [check],
            [AS_VAR_PUSHDEF([gl_header_exists],
                            [ac_cv_header_]m4_defn([gl_HEADER_NAME]))
             if test AS_VAR_GET(gl_header_exists) = yes; then
             AS_VAR_POPDEF([gl_header_exists])
            ])
           gl_ABSOLUTE_HEADER_ONE(gl_HEADER_NAME)
           AS_VAR_COPY([gl_header], [gl_cv_absolute_]AS_TR_SH(gl_HEADER_NAME))
           AS_VAR_SET(gl_next_header, ['"'$gl_header'"'])
          m4_if([$2], [check],
            [else
               AS_VAR_SET(gl_next_header, ['<'gl_HEADER_NAME'>'])
             fi
            ])
         ])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_]m4_defn([gl_HEADER_NAME])),
       [AS_VAR_GET(gl_next_header)])
     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'
       gl_next_as_first_directive='<'gl_HEADER_NAME'>'
     else
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'
       gl_next_as_first_directive=AS_VAR_GET(gl_next_header)
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_AS_FIRST_DIRECTIVE_]m4_defn([gl_HEADER_NAME])),
       [$gl_next_as_first_directive])
     AS_VAR_POPDEF([gl_next_header])])
])
m4trace:m4/openvswitch.m4:17: -1- m4_include([m4/compat.m4])
m4trace:m4/openvswitch.m4:20: -1- AC_DEFUN([OVS_CHECK_COVERAGE], [AC_REQUIRE([AC_PROG_CC])
   AC_ARG_ENABLE(
     [coverage],
     [AC_HELP_STRING([--enable-coverage],
                     [Enable gcov coverage tool.])],
     [case "${enableval}" in
        (yes) coverage=true ;;
        (no)  coverage=false ;;
        (*) AC_MSG_ERROR([bad value ${enableval} for --enable-coverage]) ;;
      esac],
     [coverage=false])
   if $coverage; then
     # Autoconf by default puts "-g -O2" in CFLAGS.  We need to remove the -O2
     # option for coverage to be useful.  This does it without otherwise
     # interfering with anything that the user might have put there.
     old_CFLAGS=$CFLAGS
     CFLAGS=
     for option in $old_CFLAGS; do
        case $option in
            (-O2) ;;
            (*) CFLAGS="$CFLAGS $option" ;;
        esac
     done

     OVS_CFLAGS="$OVS_CFLAGS --coverage"
     OVS_LDFLAGS="$OVS_LDFLAGS --coverage"
   fi])
m4trace:m4/openvswitch.m4:50: -1- AC_DEFUN([OVS_CHECK_NDEBUG], [AC_ARG_ENABLE(
     [ndebug],
     [AC_HELP_STRING([--enable-ndebug],
                     [Disable debugging features for max performance])],
     [case "${enableval}" in
        (yes) ndebug=true ;;
        (no)  ndebug=false ;;
        (*) AC_MSG_ERROR([bad value ${enableval} for --enable-ndebug]) ;;
      esac],
     [ndebug=false])
   AM_CONDITIONAL([NDEBUG], [test x$ndebug = xtrue])])
m4trace:m4/openvswitch.m4:64: -1- AC_DEFUN([OVS_CHECK_WIN64], [AC_CACHE_CHECK(
    [for MSVC x64 compiler],
    [cl_cv_x64],
    [dnl "cl" writes x64 output to stdin:
     if (cl) 2>&1 | grep 'x64' >/dev/null 2>&1; then
       cl_cv_x64=yes
       MSVC64_LDFLAGS=" /MACHINE:X64 "
       MSVC_PLATFORM="x64"
     else
       cl_cv_x64=no
       MSVC64_LDFLAGS=""
       MSVC_PLATFORM="x86"
     fi])
     AC_SUBST([MSVC64_LDFLAGS])
     AC_SUBST([MSVC_PLATFORM])
])
m4trace:m4/openvswitch.m4:83: -1- AC_DEFUN([OVS_CHECK_WIN32], [AC_CHECK_HEADER([windows.h],
                   [WIN32=yes],
                   [WIN32=no])
   AM_CONDITIONAL([WIN32], [test "$WIN32" = yes])
   if test "$WIN32" = yes; then
      AC_ARG_WITH([pthread],
         [AS_HELP_STRING([--with-pthread=DIR],
            [root of the pthread-win32 directory])],
         [
            case "$withval" in
            "" | y | ye | yes | n | no)
            AC_MSG_ERROR([Invalid --with-pthread value])
              ;;
            *)
            if (cl) 2>&1 | grep 'x64' >/dev/null 2>&1; then
              cl_cv_x64=yes
            else
              cl_cv_x64=no
            fi
            if test "$cl_cv_x64" = yes; then
                PTHREAD_WIN32_DIR=$withval/lib/x64
                PTHREAD_WIN32_DIR_DLL=/$(echo ${withval} | ${SED} -e 's/://')/dll/x64
                PTHREAD_WIN32_DIR_DLL_WIN_FORM=$withval/dll/x64
            else
                PTHREAD_WIN32_DIR=$withval/lib/x86
                PTHREAD_WIN32_DIR_DLL=/$(echo ${withval} | ${SED} -e 's/://')/dll/x86
                PTHREAD_WIN32_DIR_DLL_WIN_FORM=$withval/dll/x86
            fi
            PTHREAD_INCLUDES=-I$withval/include
            PTHREAD_LDFLAGS=-L$PTHREAD_WIN32_DIR
            PTHREAD_LIBS="-lpthreadVC2"
            AC_SUBST([PTHREAD_WIN32_DIR_DLL_WIN_FORM])
            AC_SUBST([PTHREAD_WIN32_DIR_DLL])
            AC_SUBST([PTHREAD_INCLUDES])
            AC_SUBST([PTHREAD_LDFLAGS])
            AC_SUBST([PTHREAD_LIBS])
              ;;
            esac
         ], [
            AC_MSG_ERROR([pthread directory not specified])
         ]
      )
      AC_ARG_WITH([debug],
         [AS_HELP_STRING([--with-debug],
            [Build without compiler optimizations])],
         [
            MSVC_CFLAGS="-O0"
            AC_SUBST([MSVC_CFLAGS])
         ], [
            MSVC_CFLAGS="-O2"
            AC_SUBST([MSVC_CFLAGS])
         ]
      )

      AC_DEFINE([WIN32], [1], [Define to 1 if building on WIN32.])
      AC_CHECK_TYPES([struct timespec], [], [], [[#include <time.h>]])
      AH_BOTTOM([#ifdef WIN32
#include "include/windows/windefs.h"
#endif])
   fi])
m4trace:m4/openvswitch.m4:148: -1- AC_DEFUN([OVS_CHECK_VISUAL_STUDIO_DDK], [
AC_ARG_WITH([vstudiotarget],
         [AS_HELP_STRING([--with-vstudiotarget=target_type],
            [Target type: Debug/Release])],
         [
            case "$withval" in
            "Release") ;;
            "Debug") ;;
            *) AC_MSG_ERROR([No valid Visual Studio configuration found]) ;;
            esac

            VSTUDIO_CONFIG=$withval
         ], [
            VSTUDIO_CONFIG=
         ]
      )

  AC_SUBST([VSTUDIO_CONFIG])

AC_ARG_WITH([vstudiotargetver],
         [AS_HELP_STRING([--with-vstudiotargetver=target_ver1,target_ver2],
            [Target versions: Win8,Win8.1,Win10])],
         [
            targetver=`echo "$withval" | tr -s , ' ' `
            for ver in $targetver; do
                case "$ver" in
                "Win8") VSTUDIO_WIN8=true ;;
                "Win8.1")  VSTUDIO_WIN8_1=true ;;
                "Win10") VSTUDIO_WIN10=true ;;
                *) AC_MSG_ERROR([No valid Visual Studio target version found]) ;;
                esac
            done

         ], [
            VSTUDIO_WIN8=true
            VSTUDIO_WIN8_1=true
            VSTUDIO_WIN10=true
         ]
      )

  AM_CONDITIONAL([VSTUDIO_WIN8], [test -n "$VSTUDIO_WIN8"])
  AM_CONDITIONAL([VSTUDIO_WIN8_1], [test -n "$VSTUDIO_WIN8_1"])
  AM_CONDITIONAL([VSTUDIO_WIN10], [test -n "$VSTUDIO_WIN10"])

  AC_DEFINE([VSTUDIO_DDK], [1], [System uses the Visual Studio build target.])
  AM_CONDITIONAL([VSTUDIO_DDK], [test -n "$VSTUDIO_CONFIG"])
])
m4trace:m4/openvswitch.m4:197: -1- AC_DEFUN([OVS_CHECK_NETLINK], [AC_CHECK_HEADER([linux/netlink.h],
                   [HAVE_NETLINK=yes],
                   [HAVE_NETLINK=no],
                   [#include <sys/socket.h>
   ])
   AM_CONDITIONAL([HAVE_NETLINK], [test "$HAVE_NETLINK" = yes])
   if test "$HAVE_NETLINK" = yes; then
      AC_DEFINE([HAVE_NETLINK], [1],
                [Define to 1 if Netlink protocol is available.])
   fi])
m4trace:m4/openvswitch.m4:210: -1- AC_DEFUN([OVS_CHECK_LIBCAPNG], [AC_ARG_ENABLE(
     [libcapng],
     [AC_HELP_STRING([--disable-libcapng], [Disable Linux capability support])],
     [case "${enableval}" in
        (yes) libcapng=true ;;
        (no)  libcapng=false ;;
        (*) AC_MSG_ERROR([bad value ${enableval} for --enable-libcapng]) ;;
      esac],
     [libcapng=check])

   if test "$libcapng" != false; then
       AC_CHECK_LIB([cap-ng], [capng_clear], [HAVE_LIBCAPNG=yes])

       if test "$HAVE_LIBCAPNG" != yes; then
           if test "$libcapng" = true ; then
                AC_MSG_ERROR([libcap-ng support requested, but not found])
           fi
           if test "$libcapng" = check ; then
                 AC_MSG_WARN([cannot find libcap-ng.
--user option will not be supported on Linux.
(you may use --disable-libcapng to suppress this warning). ])
           fi
       fi
   fi

   AC_SUBST([HAVE_LIBCAPNG])
   AM_CONDITIONAL([HAVE_LIBCAPNG], [test "$HAVE_LIBCAPNG" = yes])
   if test "$HAVE_LIBCAPNG" = yes; then
      AC_DEFINE([HAVE_LIBCAPNG], [1],
                [Define to 1 if libcap-ng is available.])
      CAPNG_LDADD="-lcap-ng"
      AC_SUBST([CAPNG_LDADD])
   fi])
m4trace:m4/openvswitch.m4:246: -1- AC_DEFUN([OVS_CHECK_OPENSSL], [AC_ARG_ENABLE(
     [ssl],
     [AC_HELP_STRING([--disable-ssl], [Disable OpenSSL support])],
     [case "${enableval}" in
        (yes) ssl=true ;;
        (no)  ssl=false ;;
        (*) AC_MSG_ERROR([bad value ${enableval} for --enable-ssl]) ;;
      esac],
     [ssl=check])

   if test "$ssl" != false; then
       AX_CHECK_OPENSSL(
         [HAVE_OPENSSL=yes],
         [HAVE_OPENSSL=no
          if test "$ssl" = check; then
            AC_MSG_WARN([Cannot find openssl:

$SSL_PKG_ERRORS

OpenFlow connections over SSL will not be supported.
(You may use --disable-ssl to suppress this warning.)])
          else
            AC_MSG_ERROR([Cannot find openssl (use --disable-ssl to configure without SSL support)])
          fi])
   else
       HAVE_OPENSSL=no
   fi
   AC_SUBST([HAVE_OPENSSL])
   AM_CONDITIONAL([HAVE_OPENSSL], [test "$HAVE_OPENSSL" = yes])
   if test "$HAVE_OPENSSL" = yes; then
      AC_DEFINE([HAVE_OPENSSL], [1], [Define to 1 if OpenSSL is installed.])
   fi

   OPENSSL_SUPPORTS_SNI=no
   if test $HAVE_OPENSSL = yes; then
      save_CPPFLAGS=$CPPFLAGS
      CPPFLAGS="$CPPFLAGS $SSL_INCLUDES"
      AC_CHECK_DECL([SSL_set_tlsext_host_name], [OPENSSL_SUPPORTS_SNI=yes],
                    [], [#include <openssl/ssl.h>
])
      if test $OPENSSL_SUPPORTS_SNI = yes; then
        AC_DEFINE(
          [OPENSSL_SUPPORTS_SNI], [1],
          [Define to 1 if OpenSSL supports Server Name Indication (SNI).])
      fi
      CPPFLAGS=$save_CPPFLAGS
   fi
   AC_SUBST([OPENSSL_SUPPORTS_SNI])
])
m4trace:m4/openvswitch.m4:298: -1- AC_DEFUN([OVS_CHECK_SOCKET_LIBS], [AC_CHECK_LIB([socket], [connect])
   AC_SEARCH_LIBS([gethostbyname], [resolv])])
m4trace:m4/openvswitch.m4:303: -1- AC_DEFUN([OVS_CHECK_PKIDIR], [AC_ARG_WITH(
     [pkidir],
     AC_HELP_STRING([--with-pkidir=DIR],
                    [PKI hierarchy directory [[LOCALSTATEDIR/lib/openvswitch/pki]]]),
     [PKIDIR=$withval],
     [PKIDIR='${localstatedir}/lib/openvswitch/pki'])
   AC_SUBST([PKIDIR])])
m4trace:m4/openvswitch.m4:313: -1- AC_DEFUN([OVS_CHECK_RUNDIR], [AC_ARG_WITH(
     [rundir],
     AC_HELP_STRING([--with-rundir=DIR],
                    [directory used for pidfiles
                    [[LOCALSTATEDIR/run/openvswitch]]]),
     [RUNDIR=$withval],
     [RUNDIR='${localstatedir}/run/openvswitch'])
   AC_SUBST([RUNDIR])])
m4trace:m4/openvswitch.m4:324: -1- AC_DEFUN([OVS_CHECK_LOGDIR], [AC_ARG_WITH(
     [logdir],
     AC_HELP_STRING([--with-logdir=DIR],
                    [directory used for logs [[LOCALSTATEDIR/log/PACKAGE]]]),
     [LOGDIR=$withval],
     [LOGDIR='${localstatedir}/log/${PACKAGE}'])
   AC_SUBST([LOGDIR])])
m4trace:m4/openvswitch.m4:334: -1- AC_DEFUN([OVS_CHECK_DBDIR], [AC_ARG_WITH(
     [dbdir],
     AC_HELP_STRING([--with-dbdir=DIR],
                    [directory used for conf.db [[SYSCONFDIR/PACKAGE]]]),
     [DBDIR=$withval],
     [DBDIR='${sysconfdir}/${PACKAGE}'])
   AC_SUBST([DBDIR])])
m4trace:m4/openvswitch.m4:344: -1- AC_DEFUN([OVS_CHECK_BACKTRACE], [AC_SEARCH_LIBS([backtrace], [execinfo ubacktrace],
                  [AC_DEFINE([HAVE_BACKTRACE], [1],
                             [Define to 1 if you have backtrace(3).])])])
m4trace:m4/openvswitch.m4:350: -1- AC_DEFUN([OVS_CHECK_PERF_EVENT], [AC_CHECK_HEADERS([linux/perf_event.h])])
m4trace:m4/openvswitch.m4:354: -1- AC_DEFUN([OVS_CHECK_VALGRIND], [AC_CHECK_HEADERS([valgrind/valgrind.h])])
m4trace:m4/openvswitch.m4:358: -1- AC_DEFUN([OVS_CHECK_PYTHON2], [AC_CACHE_CHECK(
     [for Python 2.x for x >= 7],
     [ovs_cv_python2],
     [if test -n "$PYTHON2"; then
        ovs_cv_python2=$PYTHON2
      else
        ovs_cv_python2=no
        for binary in python2 python2.7 python; do
          ovs_save_IFS=$IFS; IFS=$PATH_SEPARATOR
          for dir in $PATH; do
            IFS=$ovs_save_IFS
            test -z "$dir" && dir=.
            if test -x "$dir"/"$binary" && "$dir"/"$binary" -c 'import sys
if sys.hexversion >= 0x02070000 and sys.hexversion < 0x03000000:
    sys.exit(0)
else:
    sys.exit(1)'; then
              ovs_cv_python2=$dir/$binary
              break 2
            fi
          done
        done
        if test "$ovs_cv_python2" != no && test -x "$ovs_cv_python2"; then
          if ! "$ovs_cv_python2" -c 'import six ; six.moves.range' >&AS_MESSAGE_LOG_FD 2>&1; then
            ovs_cv_python2=no
            AC_MSG_WARN([Missing Python six library or version too old.])
          fi
        fi
      fi])
   AC_SUBST([HAVE_PYTHON2])
   AM_MISSING_PROG([PYTHON2], [python2])
   if test "$ovs_cv_python2" != no; then
     PYTHON2=$ovs_cv_python2
     HAVE_PYTHON2=yes
   else
     HAVE_PYTHON2=no
   fi
   AM_CONDITIONAL([HAVE_PYTHON2], [test "$HAVE_PYTHON2" = yes])])
m4trace:m4/openvswitch.m4:399: -1- AC_DEFUN([OVS_CHECK_PYTHON3], [AC_CACHE_CHECK(
     [for Python 3.x for x >= 4],
     [ovs_cv_python3],
     [if test -n "$PYTHON3"; then
        ovs_cv_python3=$PYTHON3
      else
        ovs_cv_python3=no
        for binary in python3 python3.4; do
          ovs_save_IFS=$IFS; IFS=$PATH_SEPARATOR
          for dir in $PATH; do
            IFS=$ovs_save_IFS
            test -z "$dir" && dir=.
            if test -x "$dir"/"$binary" && "$dir"/"$binary" -c 'import sys
if sys.hexversion >= 0x03040000 and sys.hexversion < 0x04000000:
    sys.exit(0)
else:
    sys.exit(1)'; then
              ovs_cv_python3=$dir/$binary
              break 2
            fi
          done
        done
        if test "$ovs_cv_python3" != no; then
          if test -x "$ovs_cv_python3" && ! "$ovs_cv_python3" -c 'import six' >/dev/null 2>&1; then
            ovs_cv_python3=no
            AC_MSG_WARN([Missing Python six library.])
          fi
        fi
      fi])
   AC_SUBST([HAVE_PYTHON3])
   AM_MISSING_PROG([PYTHON3], [python3])
   if test "$ovs_cv_python3" != no; then
     PYTHON3=$ovs_cv_python3
     HAVE_PYTHON3=yes
   else
     HAVE_PYTHON3=no
   fi
   AM_CONDITIONAL([HAVE_PYTHON3], [test "$HAVE_PYTHON3" = yes])])
m4trace:m4/openvswitch.m4:441: -1- AC_DEFUN([OVS_CHECK_PYTHON], [AC_CACHE_CHECK(
     [for Python 2 or 3],
     [ovs_cv_python],
     [if test -n "$PYTHON"; then
        ovs_cv_python=$PYTHON
      else
        ovs_cv_python=no
        if test "$ovs_cv_python2" != no; then
          ovs_cv_python=$ovs_cv_python2
        elif test "$ovs_cv_python3" != no; then
          ovs_cv_python=$ovs_cv_python3
        else
          AC_MSG_ERROR([Missing Python.])
        fi
      fi])
    AC_SUBST([PYTHON])
    PYTHON=$ovs_cv_python
    AC_SUBST([HAVE_PYTHON])
    HAVE_PYTHON=yes
    AM_CONDITIONAL([HAVE_PYTHON], [test "$HAVE_PYTHON" = yes])])
m4trace:m4/openvswitch.m4:464: -1- AC_DEFUN([OVS_CHECK_FLAKE8], [AC_CACHE_CHECK(
    [for flake8],
    [ovs_cv_flake8],
    [if flake8 --version >/dev/null 2>&1; then
       ovs_cv_flake8=yes
     else
       ovs_cv_flake8=no
     fi])
   AM_CONDITIONAL([HAVE_FLAKE8], [test "$ovs_cv_flake8" = yes])])
m4trace:m4/openvswitch.m4:476: -1- AC_DEFUN([OVS_CHECK_SPHINX], [AC_CACHE_CHECK(
    [for sphinx],
    [ovs_cv_sphinx],
    [if type sphinx-build >/dev/null 2>&1; then
       ovs_cv_sphinx=yes
     else
       ovs_cv_sphinx=no
     fi])
   AM_CONDITIONAL([HAVE_SPHINX], [test "$ovs_cv_sphinx" = yes])])
m4trace:m4/openvswitch.m4:488: -1- AC_DEFUN([OVS_CHECK_DOT], [AC_CACHE_CHECK(
    [for dot],
    [ovs_cv_dot],
    [dnl "dot" writes -V output to stderr:
     if (dot -V) 2>&1 | grep '^dot - [[gG]]raphviz version' >/dev/null 2>&1; then
       ovs_cv_dot=yes
     else
       ovs_cv_dot=no
     fi])
   AM_CONDITIONAL([HAVE_DOT], [test "$ovs_cv_dot" = yes])])
m4trace:m4/openvswitch.m4:501: -1- AC_DEFUN([OVS_CHECK_GROFF], [AC_CACHE_CHECK(
    [for groff],
    [ovs_cv_groff],
    [if (groff -v) >/dev/null 2>&1; then
       ovs_cv_groff=yes
     else
       ovs_cv_groff=no
     fi])
   AM_CONDITIONAL([HAVE_GROFF], [test "$ovs_cv_groff" = yes])])
m4trace:m4/openvswitch.m4:519: -1- AC_DEFUN([OVS_CHECK_TLS], [AC_CACHE_CHECK(
     [whether $CC has <threads.h> that supports thread_local],
     [ovs_cv_thread_local],
     [AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([#include <threads.h>
static thread_local int var;], [return var;])],
        [ovs_cv_thread_local=yes],
        [ovs_cv_thread_local=no])])
   if test $ovs_cv_thread_local = yes; then
     AC_DEFINE([HAVE_THREAD_LOCAL], [1],
               [Define to 1 if the C compiler and linker supports the C11
                thread_local matcro defined in <threads.h>.])
   else
     AC_CACHE_CHECK(
       [whether $CC supports __thread],
       [ovs_cv___thread],
       [AC_LINK_IFELSE(
          [AC_LANG_PROGRAM([static __thread int var;], [return var;])],
          [ovs_cv___thread=yes],
          [ovs_cv___thread=no])])
     if test $ovs_cv___thread = yes; then
       AC_DEFINE([HAVE___THREAD], [1],
                 [Define to 1 if the C compiler and linker supports the
                  GCC __thread extenions.])
     fi
   fi])
m4trace:m4/openvswitch.m4:550: -1- AC_DEFUN([OVS_CHECK_ATOMIC_LIBS], [AC_SEARCH_LIBS([__atomic_load_8], [atomic])])
m4trace:m4/openvswitch.m4:559: -1- AC_DEFUN([OVS_CHECK_GCC4_ATOMICS], [AC_CACHE_CHECK(
     [whether $CC supports GCC 4.0+ atomic built-ins],
     [ovs_cv_gcc4_atomics],
     [AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([[#include <stdlib.h>

#define ovs_assert(expr) if (!(expr)) abort();
#define TEST_ATOMIC_TYPE(TYPE)                  \
    {                                           \
        TYPE x = 1;                             \
        TYPE orig;                              \
                                                \
        __sync_synchronize();                   \
        ovs_assert(x == 1);                     \
                                                \
        __sync_synchronize();                   \
        x = 3;                                  \
        __sync_synchronize();                   \
        ovs_assert(x == 3);                     \
                                                \
        orig = __sync_fetch_and_add(&x, 1);     \
        ovs_assert(orig == 3);                  \
        __sync_synchronize();                   \
        ovs_assert(x == 4);                     \
                                                \
        orig = __sync_fetch_and_sub(&x, 2);     \
        ovs_assert(orig == 4);                  \
        __sync_synchronize();                   \
        ovs_assert(x == 2);                     \
                                                \
        orig = __sync_fetch_and_or(&x, 6);      \
        ovs_assert(orig == 2);                  \
        __sync_synchronize();                   \
        ovs_assert(x == 6);                     \
                                                \
        orig = __sync_fetch_and_and(&x, 10);    \
        ovs_assert(orig == 6);                  \
        __sync_synchronize();                   \
        ovs_assert(x == 2);                     \
                                                \
        orig = __sync_fetch_and_xor(&x, 10);    \
        ovs_assert(orig == 2);                  \
        __sync_synchronize();                   \
        ovs_assert(x == 8);                     \
    }]], [dnl
TEST_ATOMIC_TYPE(char);
TEST_ATOMIC_TYPE(unsigned char);
TEST_ATOMIC_TYPE(signed char);
TEST_ATOMIC_TYPE(short);
TEST_ATOMIC_TYPE(unsigned short);
TEST_ATOMIC_TYPE(int);
TEST_ATOMIC_TYPE(unsigned int);
TEST_ATOMIC_TYPE(long int);
TEST_ATOMIC_TYPE(unsigned long int);
TEST_ATOMIC_TYPE(long long int);
TEST_ATOMIC_TYPE(unsigned long long int);
])],
        [ovs_cv_gcc4_atomics=yes],
        [ovs_cv_gcc4_atomics=no])])
   if test $ovs_cv_gcc4_atomics = yes; then
     AC_DEFINE([HAVE_GCC4_ATOMICS], [1],
               [Define to 1 if the C compiler and linker supports the GCC 4.0+
                atomic built-ins.])
   fi])
m4trace:m4/openvswitch.m4:628: -1- AC_DEFUN([OVS_CHECK_ATOMIC_ALWAYS_LOCK_FREE], [AC_CACHE_CHECK(
    [value of __atomic_always_lock_free($1)],
    [ovs_cv_atomic_always_lock_free_$1],
    [AC_COMPUTE_INT(
        [ovs_cv_atomic_always_lock_free_$1],
        [__atomic_always_lock_free($1, 0)],
        [],
        [ovs_cv_atomic_always_lock_free_$1=unsupported])])
   if test ovs_cv_atomic_always_lock_free_$1 != unsupported; then
     AC_DEFINE_UNQUOTED(
       [ATOMIC_ALWAYS_LOCK_FREE_$1B],
       [$ovs_cv_atomic_always_lock_free_$1],
       [If the C compiler is GCC 4.7 or later, define to the return value of
        __atomic_always_lock_free($1, 0).  If the C compiler is not GCC or is
        an older version of GCC, the value does not matter.])
   fi])
m4trace:m4/openvswitch.m4:647: -1- AC_DEFUN([OVS_CHECK_POSIX_AIO], [AC_SEARCH_LIBS([aio_write], [rt])
   AM_CONDITIONAL([HAVE_POSIX_AIO], [test "$ac_cv_search_aio_write" != no])])
m4trace:m4/openvswitch.m4:652: -1- AC_DEFUN([OVS_CHECK_INCLUDE_NEXT], [AC_REQUIRE([gl_CHECK_NEXT_HEADERS])
   gl_CHECK_NEXT_HEADERS([$1])])
m4trace:m4/openvswitch.m4:657: -1- AC_DEFUN([OVS_CHECK_PRAGMA_MESSAGE], [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
   [[_Pragma("message(\"Checking for pragma message\")")
   ]])],
     [AC_DEFINE(HAVE_PRAGMA_MESSAGE,1,[Define if compiler supports #pragma
     message directive])])
  ])
m4trace:m4/openvswitch.m4:668: -1- AC_DEFUN([OVS_LIBTOOL_VERSIONS], [AC_MSG_CHECKING(linker output version information)
  OVS_MAJOR=`echo "$PACKAGE_VERSION" | sed -e 's/[[.]].*//'`
  OVS_MINOR=`echo "$PACKAGE_VERSION" | sed -e "s/^$OVS_MAJOR//" -e 's/^.//' -e 's/[[.]].*//'`
  OVS_MICRO=`echo "$PACKAGE_VERSION" | sed -e "s/^$OVS_MAJOR.$OVS_MINOR//" -e 's/^.//' -e 's/[[^0-9]].*//'`
  OVS_LT_RELINFO="-release $OVS_MAJOR.$OVS_MINOR"
  OVS_LT_VERINFO="-version-info $LT_CURRENT:$OVS_MICRO"
  OVS_LTINFO="$OVS_LT_RELINFO $OVS_LT_VERINFO"
  AC_MSG_RESULT([libX-$OVS_MAJOR.$OVS_MINOR.so.$LT_CURRENT.0.$OVS_MICRO)])
  AC_SUBST(OVS_LTINFO)
    ])
m4trace:m4/openvswitch.m4:685: -1- AC_DEFUN([OVS_CHECK_CXX], [AC_REQUIRE([AC_PROG_CXX])
   AC_REQUIRE([OVS_ENABLE_WERROR])
   AX_CXX_COMPILE_STDCXX([11], [], [optional])
   if test $enable_Werror = yes && test $HAVE_CXX11 = 1; then
     enable_cxx=:
     AC_LANG_PUSH([C++])
     AC_CHECK_HEADERS([atomic])
     AC_LANG_POP([C++])
   else
     enable_cxx=false
   fi
   AM_CONDITIONAL([HAVE_CXX], [$enable_cxx])])
m4trace:m4/openvswitch.m4:700: -1- AC_DEFUN([OVS_CHECK_UNBOUND], [AC_CHECK_LIB(unbound, ub_ctx_create, [HAVE_UNBOUND=yes], [HAVE_UNBOUND=no])
   if test "$HAVE_UNBOUND" = yes; then
     AC_DEFINE([HAVE_UNBOUND], [1], [Define to 1 if unbound is detected.])
     LIBS="$LIBS -lunbound"
   fi
   AM_CONDITIONAL([HAVE_UNBOUND], [test "$HAVE_UNBOUND" = yes])
   AC_SUBST([HAVE_UNBOUND])])
m4trace:m4/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:m4/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:m4/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:m4/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $1])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
   	AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else 
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
     	AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:m4/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:m4/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:acinclude.m4:18: -1- AC_DEFUN([OVS_ENABLE_WERROR], [AC_ARG_ENABLE(
     [Werror],
     [AC_HELP_STRING([--enable-Werror], [Add -Werror to CFLAGS])],
     [], [enable_Werror=no])
   AC_CONFIG_COMMANDS_PRE(
     [if test "X$enable_Werror" = Xyes; then
        OVS_CFLAGS="$OVS_CFLAGS -Werror"
      fi])

   # Unless --enable-Werror is specified, report but do not fail the build
   # for errors reported by flake8.
   if test "X$enable_Werror" = Xyes; then
     FLAKE8_WERROR=
   else
     FLAKE8_WERROR=-
   fi
   AC_SUBST([FLAKE8_WERROR])

   # If --enable-Werror is specified, fail the build on sparse warnings.
   if test "X$enable_Werror" = Xyes; then
     SPARSE_WERROR=-Wsparse-error
   else
     SPARSE_WERROR=
   fi
   AC_SUBST([SPARSE_WERROR])])
m4trace:acinclude.m4:48: -1- AC_DEFUN([OVS_CHECK_LINUX], [
  AC_ARG_WITH([linux],
              [AC_HELP_STRING([--with-linux=/path/to/linux],
                              [Specify the Linux kernel build directory])])
  AC_ARG_WITH([linux-source],
              [AC_HELP_STRING([--with-linux-source=/path/to/linux-source],
                              [Specify the Linux kernel source directory
                               (usually figured out automatically from build
                               directory)])])

  # Deprecated equivalents to --with-linux, --with-linux-source.
  AC_ARG_WITH([l26])
  AC_ARG_WITH([l26-source])

  if test X"$with_linux" != X; then
    KBUILD=$with_linux
  elif test X"$with_l26" != X; then
    KBUILD=$with_l26
    AC_MSG_WARN([--with-l26 is deprecated, please use --with-linux instead])
  else
    KBUILD=
  fi

  if test X"$KBUILD" != X; then
    if test X"$with_linux_source" != X; then
      KSRC=$with_linux_source
    elif test X"$with_l26_source" != X; then
      KSRC=$with_l26_source
      AC_MSG_WARN([--with-l26-source is deprecated, please use --with-linux-source instead])
    else
      KSRC=
    fi
  elif test X"$with_linux_source" != X || test X"$with_l26_source" != X; then
    AC_MSG_ERROR([Linux source directory may not be specified without Linux build directory])
  fi

  if test -n "$KBUILD"; then
    KBUILD=`eval echo "$KBUILD"`
    case $KBUILD in
        /*) ;;
        *) KBUILD=`pwd`/$KBUILD ;;
    esac

    # The build directory is what the user provided.
    # Make sure that it exists.
    AC_MSG_CHECKING([for Linux build directory])
    if test -d "$KBUILD"; then
        AC_MSG_RESULT([$KBUILD])
        AC_SUBST(KBUILD)
    else
        AC_MSG_RESULT([no])
        AC_ERROR([source dir $KBUILD doesn't exist])
    fi

    # Debian breaks kernel headers into "source" header and "build" headers.
    # We want the source headers, but $KBUILD gives us the "build" headers.
    # Use heuristics to find the source headers.
    AC_MSG_CHECKING([for Linux source directory])
    if test -n "$KSRC"; then
      KSRC=`eval echo "$KSRC"`
      case $KSRC in
          /*) ;;
          *) KSRC=`pwd`/$KSRC ;;
      esac
      if test ! -e $KSRC/include/linux/kernel.h; then
        AC_MSG_ERROR([$KSRC is not a kernel source directory])
      fi
    else
      KSRC=$KBUILD
      if test ! -e $KSRC/include/linux/kernel.h; then
        # Debian kernel build Makefiles tend to include a line of the form:
        # MAKEARGS := -C /usr/src/linux-headers-3.2.0-1-common O=/usr/src/linux-headers-3.2.0-1-486
        # First try to extract the source directory from this line.
        KSRC=`sed -n 's/.*-C \([[^ ]]*\).*/\1/p' "$KBUILD"/Makefile`
        if test ! -e "$KSRC"/include/linux/kernel.h; then
          # Didn't work.  Fall back to name-based heuristics that used to work.
          case `echo "$KBUILD" | sed 's,/*$,,'` in # (
            */build)
              KSRC=`echo "$KBUILD" | sed 's,/build/*$,/source,'`
              ;; # (
            *)
              KSRC=`(cd $KBUILD && pwd -P) | sed 's,-[[^-]]*$,-common,'`
              ;;
          esac
        fi
      fi
      if test ! -e "$KSRC"/include/linux/kernel.h; then
        AC_MSG_ERROR([cannot find source directory (please use --with-linux-source)])
      fi
    fi
    AC_MSG_RESULT([$KSRC])

    AC_MSG_CHECKING([for kernel version])
    version=`sed -n 's/^VERSION = //p' "$KSRC/Makefile"`
    patchlevel=`sed -n 's/^PATCHLEVEL = //p' "$KSRC/Makefile"`
    sublevel=`sed -n 's/^SUBLEVEL = //p' "$KSRC/Makefile"`
    if test X"$version" = X || test X"$patchlevel" = X; then
       AC_ERROR([cannot determine kernel version])
    elif test X"$sublevel" = X; then
       kversion=$version.$patchlevel
    else
       kversion=$version.$patchlevel.$sublevel
    fi
    AC_MSG_RESULT([$kversion])

    if test "$version" -ge 5; then
       if test "$version" = 5 && test "$patchlevel" -le 0; then
          : # Linux 5.x
       else
          AC_ERROR([Linux kernel in $KBUILD is version $kversion, but version newer than 5.0.x is not supported (please refer to the FAQ for advice)])
       fi
    elif test "$version" = 4; then
       : # Linux 4.x
    elif test "$version" = 3 && test "$patchlevel" -ge 10; then
       : # Linux 3.x
    else
       AC_ERROR([Linux kernel in $KBUILD is version $kversion, but version 3.10 or later is required])
    fi
    if (test ! -e "$KBUILD"/include/linux/version.h && \
        test ! -e "$KBUILD"/include/generated/uapi/linux/version.h)|| \
       (test ! -e "$KBUILD"/include/linux/autoconf.h && \
        test ! -e "$KBUILD"/include/generated/autoconf.h); then
        AC_MSG_ERROR([Linux kernel source in $KBUILD is not configured])
    fi
    OVS_CHECK_LINUX_COMPAT
  fi
  AM_CONDITIONAL(LINUX_ENABLED, test -n "$KBUILD")
])
m4trace:acinclude.m4:180: -1- AC_DEFUN([OVS_CHECK_LINUX_TC], [
  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/pkt_cls.h>], [
        int x = TCA_FLOWER_KEY_ENC_IP_TTL_MASK;
    ])],
    [AC_DEFINE([HAVE_TCA_FLOWER_KEY_ENC_IP_TTL_MASK], [1],
               [Define to 1 if TCA_FLOWER_KEY_ENC_IP_TTL_MASK is available.])])

  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/tc_act/tc_vlan.h>], [
        int x = TCA_VLAN_PUSH_VLAN_PRIORITY;
    ])],
    [AC_DEFINE([HAVE_TCA_VLAN_PUSH_VLAN_PRIORITY], [1],
               [Define to 1 if TCA_VLAN_PUSH_VLAN_PRIORITY is available.])])

  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/tc_act/tc_mpls.h>], [
        int x = TCA_MPLS_TTL;
    ])],
    [AC_DEFINE([HAVE_TCA_MPLS_TTL], [1],
               [Define to 1 if HAVE_TCA_MPLS_TTL is available.])])

  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/tc_act/tc_tunnel_key.h>], [
        int x = TCA_TUNNEL_KEY_ENC_TTL;
    ])],
    [AC_DEFINE([HAVE_TCA_TUNNEL_KEY_ENC_TTL], [1],
               [Define to 1 if TCA_TUNNEL_KEY_ENC_TTL is available.])])

  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/tc_act/tc_pedit.h>], [
        int x = TCA_PEDIT_KEY_EX_HDR_TYPE_UDP;
    ])],
    [AC_DEFINE([HAVE_TCA_PEDIT_KEY_EX_HDR_TYPE_UDP], [1],
               [Define to 1 if TCA_PEDIT_KEY_EX_HDR_TYPE_UDP is available.])])

  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/tc_act/tc_skbedit.h>], [
        int x = TCA_SKBEDIT_FLAGS;
    ])],
    [AC_DEFINE([HAVE_TCA_SKBEDIT_FLAGS], [1],
               [Define to 1 if TCA_SKBEDIT_FLAGS is available.])])
])
m4trace:acinclude.m4:227: -1- AC_DEFUN([OVS_CHECK_LINUX_SCTP_CT], [
  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([#include <linux/netfilter/nfnetlink.h>
#include <linux/netfilter/nfnetlink_conntrack.h>
#include <linux/netfilter/nf_conntrack_common.h>
#include <linux/netfilter/nf_conntrack_sctp.h>], [
        int x = SCTP_CONNTRACK_HEARTBEAT_SENT;
    ])],
    [AC_DEFINE([HAVE_SCTP_CONNTRACK_HEARTBEATS], [1],
               [Define to 1 if SCTP_CONNTRACK_HEARTBEAT_SENT is available.])])
])
m4trace:acinclude.m4:242: -1- AC_DEFUN([OVS_FIND_DEPENDENCY], [
  AC_SEARCH_LIBS([$1], [$2], [], [
    AC_MSG_ERROR([unable to find $3, install the dependency package])
  ])
])
m4trace:acinclude.m4:251: -1- AC_DEFUN([OVS_CHECK_LINUX_AF_XDP], [
  AC_ARG_ENABLE([afxdp],
                [AC_HELP_STRING([--enable-afxdp], [Enable AF-XDP support])],
                [], [enable_afxdp=no])
  AC_MSG_CHECKING([whether AF_XDP is enabled])
  if test "$enable_afxdp" != yes; then
    AC_MSG_RESULT([no])
    AF_XDP_ENABLE=false
  else
    AC_MSG_RESULT([yes])
    AF_XDP_ENABLE=true

    AC_CHECK_HEADER([bpf/libbpf.h], [],
      [AC_MSG_ERROR([unable to find bpf/libbpf.h for AF_XDP support])])

    AC_CHECK_HEADER([linux/if_xdp.h], [],
      [AC_MSG_ERROR([unable to find linux/if_xdp.h for AF_XDP support])])

    AC_CHECK_HEADER([bpf/xsk.h], [],
      [AC_MSG_ERROR([unable to find bpf/xsk.h for AF_XDP support])])

    AC_CHECK_FUNCS([pthread_spin_lock], [],
      [AC_MSG_ERROR([unable to find pthread_spin_lock for AF_XDP support])])

    AC_DEFINE([HAVE_AF_XDP], [1],
              [Define to 1 if AF_XDP support is available and enabled.])
    LIBBPF_LDADD=" -lbpf -lelf"
    AC_SUBST([LIBBPF_LDADD])
  fi
  AM_CONDITIONAL([HAVE_AF_XDP], test "$AF_XDP_ENABLE" = true)
])
m4trace:acinclude.m4:286: -1- AC_DEFUN([OVS_CHECK_DPDK], [
  AC_ARG_WITH([dpdk],
              [AC_HELP_STRING([--with-dpdk=/path/to/dpdk],
                              [Specify the DPDK build directory])],
              [have_dpdk=true])

  AC_MSG_CHECKING([whether dpdk datapath is enabled])
  if test "$have_dpdk" != true || test "$with_dpdk" = no; then
    AC_MSG_RESULT([no])
    DPDKLIB_FOUND=false
  else
    AC_MSG_RESULT([yes])
    case "$with_dpdk" in
      yes)
        DPDK_AUTO_DISCOVER="true"
        PKG_CHECK_MODULES_STATIC([DPDK], [libdpdk], [
            DPDK_INCLUDE="$DPDK_CFLAGS"
            DPDK_LIB="$DPDK_LIBS"], [
            DPDK_INCLUDE="-I/usr/local/include/dpdk -I/usr/include/dpdk"
            DPDK_LIB="-ldpdk"])
        ;;
      *)
        DPDK_AUTO_DISCOVER="false"
        DPDK_INCLUDE_PATH="$with_dpdk/include"
        # If 'with_dpdk' is passed install directory, point to headers
        # installed in $DESTDIR/$prefix/include/dpdk
        if test -e "$DPDK_INCLUDE_PATH/rte_config.h"; then
           DPDK_INCLUDE="-I$DPDK_INCLUDE_PATH"
        elif test -e "$DPDK_INCLUDE_PATH/dpdk/rte_config.h"; then
           DPDK_INCLUDE="-I$DPDK_INCLUDE_PATH/dpdk"
        fi
        DPDK_LIB_DIR="$with_dpdk/lib"
        DPDK_LIB="-ldpdk"
        ;;
    esac

    ovs_save_CFLAGS="$CFLAGS"
    ovs_save_LDFLAGS="$LDFLAGS"
    CFLAGS="$CFLAGS $DPDK_INCLUDE"
    if test "$DPDK_AUTO_DISCOVER" = "false"; then
      LDFLAGS="$LDFLAGS -L${DPDK_LIB_DIR}"
    fi

    AC_CHECK_HEADERS([rte_config.h], [], [
      AC_MSG_ERROR([unable to find rte_config.h in $with_dpdk])
    ], [AC_INCLUDES_DEFAULT])

    AC_CHECK_DECLS([RTE_LIBRTE_VHOST_NUMA, RTE_EAL_NUMA_AWARE_HUGEPAGES], [
      OVS_FIND_DEPENDENCY([get_mempolicy], [numa], [libnuma])
    ], [], [[#include <rte_config.h>]])

    AC_CHECK_DECL([RTE_LIBRTE_VHOST_NUMA], [
      AC_DEFINE([VHOST_NUMA], [1], [NUMA Aware vHost support detected in DPDK.])
    ], [], [[#include <rte_config.h>]])

    AC_CHECK_DECL([RTE_LIBRTE_PMD_PCAP], [
      OVS_FIND_DEPENDENCY([pcap_dump], [pcap], [libpcap])
      AC_CHECK_DECL([RTE_LIBRTE_PDUMP], [
        AC_DEFINE([DPDK_PDUMP], [1], [DPDK pdump enabled in OVS.])
      ], [], [[#include <rte_config.h>]])
    ], [], [[#include <rte_config.h>]])

    AC_CHECK_DECL([RTE_LIBRTE_MLX5_PMD], [dnl found
      OVS_FIND_DEPENDENCY([mnl_attr_put], [mnl], [libmnl])
      AC_CHECK_DECL([RTE_LIBRTE_MLX5_DLOPEN_DEPS], [], [dnl not found
        OVS_FIND_DEPENDENCY([mlx5dv_create_wq], [mlx5], [libmlx5])
        OVS_FIND_DEPENDENCY([verbs_init_cq], [ibverbs], [libibverbs])
      ], [[#include <rte_config.h>]])
    ], [], [[#include <rte_config.h>]])

    AC_CHECK_DECL([RTE_LIBRTE_MLX4_PMD], [dnl found
      AC_CHECK_DECL([RTE_LIBRTE_MLX4_DLOPEN_DEPS], [], [dnl not found
        OVS_FIND_DEPENDENCY([mlx4dv_init_obj], [mlx4], [libmlx4])
        OVS_FIND_DEPENDENCY([verbs_init_cq], [ibverbs], [libibverbs])
      ], [[#include <rte_config.h>]])
    ], [], [[#include <rte_config.h>]])

    # DPDK uses dlopen to load plugins.
    OVS_FIND_DEPENDENCY([dlopen], [dl], [libdl])

    AC_MSG_CHECKING([whether linking with dpdk works])
    LIBS="$DPDK_LIB $LIBS"
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM([#include <rte_config.h>
                        #include <rte_eal.h>],
                       [int rte_argc; char ** rte_argv;
                        rte_eal_init(rte_argc, rte_argv);])],
      [AC_MSG_RESULT([yes])
       DPDKLIB_FOUND=true],
      [AC_MSG_RESULT([no])
       if test "$DPDK_AUTO_DISCOVER" = "true"; then
         AC_MSG_ERROR(m4_normalize([
            Could not find DPDK library in default search path, Use --with-dpdk
            to specify the DPDK library installed in non-standard location]))
       else
         AC_MSG_ERROR([Could not find DPDK libraries in $DPDK_LIB_DIR])
       fi
      ])

    CFLAGS="$ovs_save_CFLAGS"
    LDFLAGS="$ovs_save_LDFLAGS"
    if test "$DPDK_AUTO_DISCOVER" = "false"; then
      OVS_LDFLAGS="$OVS_LDFLAGS -L$DPDK_LIB_DIR"
    fi
    OVS_CFLAGS="$OVS_CFLAGS $DPDK_INCLUDE"
    OVS_ENABLE_OPTION([-mssse3])

    # DPDK pmd drivers are not linked unless --whole-archive is used.
    #
    # This happens because the rest of the DPDK code doesn't use any symbol in
    # the pmd driver objects, and the drivers register themselves using an
    # __attribute__((constructor)) function.
    #
    # These options are specified inside a single -Wl directive to prevent
    # autotools from reordering them.
    #
    # OTOH newer versions of dpdk pkg-config (generated with Meson)
    # will already have flagged just the right set of libs with
    # --whole-archive - in those cases do not wrap it once more.
    case "$DPDK_LIB" in
      *whole-archive*) DPDK_vswitchd_LDFLAGS=$DPDK_LIB;;
      *) DPDK_vswitchd_LDFLAGS=-Wl,--whole-archive,$DPDK_LIB,--no-whole-archive
    esac
    AC_SUBST([DPDK_vswitchd_LDFLAGS])
    AC_DEFINE([DPDK_NETDEV], [1], [System uses the DPDK module.])
  fi

  AM_CONDITIONAL([DPDK_NETDEV], test "$DPDKLIB_FOUND" = true)
])
m4trace:acinclude.m4:421: -1- AC_DEFUN([OVS_GREP_IFELSE], [
  AC_MSG_CHECKING([whether $2 matches in $1])
  if test -f $1; then
    grep '$2' $1 >/dev/null 2>&1
    status=$?
    case $status in
      0)
        AC_MSG_RESULT([yes])
        m4_if([$3], [], [OVS_DEFINE([HAVE_]m4_toupper([$2]))], [$3])
        ;;
      1)
        AC_MSG_RESULT([no])
        $4
        ;;
      *)
        AC_MSG_ERROR([grep exited with status $status])
        ;;
    esac
  else
    AC_MSG_RESULT([file not found])
    $4
  fi
])
m4trace:acinclude.m4:452: -1- AC_DEFUN([OVS_FIND_FIELD_IFELSE], [
  AC_MSG_CHECKING([whether $2 has member $3 in $1])
  if test -f $1; then
    awk '/$2.{/,/^}/' $1 2>/dev/null | grep '$3' >/dev/null
    status=$?
    case $status in
      0)
        AC_MSG_RESULT([yes])
        m4_if([$4], [], [OVS_DEFINE([HAVE_]m4_toupper([$2])[_WITH_]m4_toupper([$3]))], [$4])
        ;;
      1)
        AC_MSG_RESULT([no])
        $5
        ;;
      *)
        AC_MSG_ERROR([grep exited with status $status])
        ;;
    esac
  else
    AC_MSG_RESULT([file not found])
    $5
  fi
])
m4trace:acinclude.m4:485: -1- AC_DEFUN([OVS_FIND_PARAM_IFELSE], [
  AC_MSG_CHECKING([whether $2 has parameter $3 in $1])
  if test -f $1; then
    awk '/$2[[ \t\n]]*\(/,/\)/' $1 2>/dev/null | grep '$3' >/dev/null
    status=$?
    case $status in
      0)
        AC_MSG_RESULT([yes])
        m4_if([$4], [], [OVS_DEFINE([HAVE_]m4_toupper([$2])[_WITH_]m4_toupper([$3]))], [$4])
        ;;
      1)
        AC_MSG_RESULT([no])
        $5
        ;;
      *)
        AC_MSG_ERROR([grep exited with status $status])
        ;;
    esac
  else
    AC_MSG_RESULT([file not found])
    $5
  fi
])
m4trace:acinclude.m4:512: -1- AC_DEFUN([OVS_DEFINE], [
  echo '#define $1 1' >> datapath/linux/kcompat.h.new
])
m4trace:acinclude.m4:520: -1- AC_DEFUN([OVS_CHECK_LINUX_COMPAT], [
  rm -f datapath/linux/kcompat.h.new
  mkdir -p datapath/linux
  : > datapath/linux/kcompat.h.new

  echo '#include <linux/version.h>
#ifndef RHEL_RELEASE_CODE
#define RHEL_RELEASE_CODE 0
#define RHEL_RELEASE_VERSION(a, b) 0
#endif' >> datapath/linux/kcompat.h.new

  OVS_GREP_IFELSE([$KSRC/arch/x86/include/asm/checksum_32.h], [src_err,],
                  [OVS_DEFINE([HAVE_CSUM_COPY_DBG])])

  OVS_GREP_IFELSE([$KSRC/include/net/ip6_fib.h], [rt6_get_cookie],
                  [OVS_DEFINE([HAVE_RT6_GET_COOKIE])])

  OVS_GREP_IFELSE([$KSRC/include/net/addrconf.h], [ipv6_dst_lookup.*net],
                  [OVS_DEFINE([HAVE_IPV6_DST_LOOKUP_NET])])
  OVS_GREP_IFELSE([$KSRC/include/net/addrconf.h], [ipv6_stub])

  OVS_GREP_IFELSE([$KSRC/include/linux/err.h], [ERR_CAST])
  OVS_GREP_IFELSE([$KSRC/include/linux/err.h], [IS_ERR_OR_NULL])
  OVS_GREP_IFELSE([$KSRC/include/linux/err.h], [PTR_ERR_OR_ZERO])

  OVS_GREP_IFELSE([$KSRC/include/linux/jump_label.h], [static_branch_unlikely(],
                  [OVS_DEFINE([HAVE_UPSTREAM_STATIC_KEY])])
  OVS_GREP_IFELSE([$KSRC/include/linux/jump_label.h], [DEFINE_STATIC_KEY_FALSE],
                  [OVS_DEFINE([HAVE_DEFINE_STATIC_KEY])])

  OVS_GREP_IFELSE([$KSRC/include/linux/etherdevice.h], [eth_hw_addr_random])
  OVS_GREP_IFELSE([$KSRC/include/linux/etherdevice.h], [ether_addr_copy])

  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_link.h], [IFLA_GENEVE_TOS])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_link.h], [rtnl_link_stats64])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_link.h], [rtnl_link_stats64])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_set_encap_proto])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_hwaccel_push_inside])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [__vlan_hwaccel_clear_tag])

  OVS_GREP_IFELSE([$KSRC/include/linux/in.h], [ipv4_is_multicast])
  OVS_GREP_IFELSE([$KSRC/include/linux/in.h], [proto_ports_offset])
  OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [__ip_select_ident.*dst_entry],
                  [OVS_DEFINE([HAVE_IP_SELECT_IDENT_USING_DST_ENTRY])])
  OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [__ip_select_ident.*net],
                  [OVS_DEFINE([HAVE_IP_SELECT_IDENT_USING_NET])])

  OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [inet_get_local_port_range.*net],
                  [OVS_DEFINE([HAVE_INET_GET_LOCAL_PORT_RANGE_USING_NET])])
  OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [ip_defrag.*net],
                  [OVS_DEFINE([HAVE_IP_DEFRAG_TAKES_NET])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ip.h],
                        [ip_do_fragment], [net],
                        [OVS_DEFINE([HAVE_IP_DO_FRAGMENT_TAKES_NET])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ip.h],
                        [ip_local_out], [net],
                        [OVS_DEFINE([HAVE_IP_LOCAL_OUT_TAKES_NET])])

  OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [ip_skb_dst_mtu])

  OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [IPSKB_FRAG_PMTU],
                  [OVS_DEFINE([HAVE_CORRECT_MRU_HANDLING])])
  OVS_GREP_IFELSE([$KSRC/include/net/ip_tunnels.h], [__ip_tunnel_change_mtu])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [hashfn.*const],
                  [OVS_DEFINE([HAVE_INET_FRAGS_CONST])])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [last_in],
                  [OVS_DEFINE([HAVE_INET_FRAGS_LAST_IN])])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_evicting])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_evictor])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frags],
                        [frags_work])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frags],
                        [rwlock])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_queue],
                        [list_evictor])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_lru_move])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/inet_frag.h],
                        [sub_frag_mem_limit], [struct.netns_frags],
                        [OVS_DEFINE([HAVE_SUB_FRAG_MEM_LIMIT_ARG_STRUCT_NETNS_FRAGS])])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [void.*inet_frags_init],
                  [OVS_DEFINE([HAVE_VOID_INET_FRAGS_INIT])])
  OVS_GREP_IFELSE([$KSRC/include/net/inetpeer.h], [vif],
                  [OVS_DEFINE([HAVE_INETPEER_VIF_SUPPORT])])

  dnl Check for dst_cache and ipv6 lable to use backported tunnel infrastructure.
  dnl OVS does not really need ipv6 label field, but its presence signifies that
  dnl the stack has all required ipv6 support.
  dnl OVS also does not need dst_cache But this dependency allows us to write
  dnl much cleaner code.

  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/ip_tunnels.h], [ip_tunnel_key],
                        [label],
                        [OVS_GREP_IFELSE([$KSRC/include/net/ip_tunnels.h],
                                         [iptunnel_pull_offloads],
                        [OVS_GREP_IFELSE([$KSRC/include/net/dst_cache.h], [dst_cache],
                        [OVS_GREP_IFELSE([$KSRC/include/net/erspan.h], [erspan_md2],
                                         [OVS_DEFINE([USE_UPSTREAM_TUNNEL])])])])])

  OVS_GREP_IFELSE([$KSRC/include/net/dst_cache.h], [dst_cache],
                  [OVS_DEFINE([USE_BUILTIN_DST_CACHE])])
  OVS_GREP_IFELSE([$KSRC/include/net/mpls.h], [mpls_hdr],
                  [OVS_DEFINE([MPLS_HEADER_IS_L3])])
  OVS_GREP_IFELSE([$KSRC/include/linux/net.h], [sock_create_kern.*net],
                  [OVS_DEFINE([HAVE_SOCK_CREATE_KERN_NET])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_fill_metadata_dst])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_disable_lro])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_get_stats])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_get_by_index_rcu])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_recursion_level])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [__skb_gso_segment])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [skb_gso_error_unwind])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [can_checksum_protocol])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_get_iflink])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_features_check],
                  [OVS_DEFINE([USE_UPSTREAM_TUNNEL_GSO])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_add_vxlan_port])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_add_geneve_port])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_udp_tunnel_add])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [netdev_features_t])
  dnl Ubuntu kernel 3.13 has defined this struct but not used for netdev->tstats.
  dnl So check type of tstats.
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [pcpu_sw_netstats.*tstats],
                  [OVS_DEFINE([HAVE_PCPU_SW_NETSTATS])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [netif_needs_gso.*net_device],
                  [OVS_DEFINE([HAVE_NETIF_NEEDS_GSO_NETDEV])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [skb_csum_hwoffload_help])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [udp_offload])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [udp_offload.*uoff],
                  [OVS_DEFINE([HAVE_UDP_OFFLOAD_ARG_UOFF])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [gro_remcsum])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [IFF_PHONY_HEADROOM])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device_ops],
                        [extended])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netdevice.h],
                        [netdev_master_upper_dev_link], [upper_priv],
                        [OVS_DEFINE([HAVE_NETDEV_MASTER_UPPER_DEV_LINK_PRIV])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h],
                  [netdev_master_upper_dev_link_rh],
                  [OVS_DEFINE([HAVE_NETDEV_MASTER_UPPER_DEV_LINK_RH])])

  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device],
                        [max_mtu])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device_ops_extended],
                        [ndo_change_mtu], [OVS_DEFINE([HAVE_RHEL7_MAX_MTU])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netdevice.h],
                        [dev_change_flags], [extack],
                        [OVS_DEFINE([HAVE_DEV_CHANGE_FLAGS_TAKES_EXTACK])])

  OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_state])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_state],
                        [struct net ], [OVS_DEFINE([HAVE_NF_HOOK_STATE_NET])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [nf_register_net_hook])
  OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hookfn.*nf_hook_ops],
                  [OVS_DEFINE([HAVE_NF_HOOKFN_ARG_OPS])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hookfn], [priv],
                  [OVS_DEFINE([HAVE_NF_HOOKFN_ARG_PRIV])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_ops],
                        [owner], [OVS_DEFINE([HAVE_NF_HOOKS_OPS_OWNER])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [NFPROTO_INET])


  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter_ipv6.h], [nf_ipv6_ops],
                        [fragment.*sock], [OVS_DEFINE([HAVE_NF_IPV6_OPS_FRAGMENT])])

  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h],
                        [nf_conn], [struct timer_list[[ \t]]*timeout],
                        [OVS_DEFINE([HAVE_NF_CONN_TIMER])])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h],
                  [nf_ct_delete(], [OVS_DEFINE([HAVE_NF_CT_DELETE])])

  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h],
                  [nf_ct_tmpl_alloc], [nf_conntrack_zone],
                  [OVS_DEFINE([HAVE_NF_CT_TMPL_ALLOC_TAKES_STRUCT_ZONE])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h],
                  [nf_ct_get_tuplepr], [struct.net],
                  [OVS_DEFINE([HAVE_NF_CT_GET_TUPLEPR_TAKES_STRUCT_NET])])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h],
                  [nf_ct_set])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h],
                  [nf_ct_is_untracked])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_zones.h],
                  [nf_ct_zone_init])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_l3proto.h],
                  [net_ns_get])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_labels.h],
                  [nf_connlabels_get])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_labels.h],
                  [nf_connlabels_get], [int bit],
                  [OVS_DEFINE([HAVE_NF_CONNLABELS_GET_TAKES_BIT])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_labels.h],
                        [nf_conn_labels], [words])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_nat.h], [nf_ct_nat_ext_add])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_nat.h], [nf_nat_alloc_null_binding])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_nat.h], [nf_nat_range2])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_seqadj.h], [nf_ct_seq_adjust])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_count.h], [nf_conncount_gc_list],
                  [OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_count.h],
                                   [int nf_conncount_add],
                                   [], [OVS_DEFINE([HAVE_UPSTREAM_NF_CONNCOUNT])])])

  OVS_GREP_IFELSE([$KSRC/include/linux/random.h], [prandom_u32])
  OVS_GREP_IFELSE([$KSRC/include/linux/random.h], [prandom_u32_max])

  OVS_GREP_IFELSE([$KSRC/include/net/rtnetlink.h], [get_link_net])
  OVS_GREP_IFELSE([$KSRC/include/net/rtnetlink.h], [name_assign_type])
  OVS_GREP_IFELSE([$KSRC/include/net/rtnetlink.h], [rtnl_create_link.*src_net],
                  [OVS_DEFINE([HAVE_RTNL_CREATE_LINK_SRC_NET])])
  OVS_GREP_IFELSE([$KSRC/include/net/net_namespace.h], [possible_net_t])

  OVS_GREP_IFELSE([$KSRC/include/linux/rcupdate.h], [rcu_read_lock_held], [],
                  [OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h],
                                   [rcu_read_lock_held])])
  OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h], [lockdep_rtnl_is_held])
  OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h], [net_rwsem])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/rtnetlink.h],
                        [rtnl_create_link], [extack],
                        [OVS_DEFINE([HAVE_RTNL_CREATE_LINK_TAKES_EXTACK])])

  # Check for the proto_data_valid member in struct sk_buff.  The [^@]
  # is necessary because some versions of this header remove the
  # member but retain the kerneldoc comment that describes it (which
  # starts with @).  The brackets must be doubled because of m4
  # quoting rules.
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [[[^@]]proto_data_valid],
                  [OVS_DEFINE([HAVE_PROTO_DATA_VALID])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_checksum_start_offset])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [inner_protocol])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [inner_protocol_type])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_inner_transport_offset])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [kfree_skb_list])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [rxhash])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [u16.*rxhash],
                  [OVS_DEFINE([HAVE_U16_RXHASH])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_dst(],
                  [OVS_DEFINE([HAVE_SKB_DST_ACCESSOR_FUNCS])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [skb_copy_from_linear_data_offset])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [skb_reset_tail_pointer])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_cow_head])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_warn_if_lro],
                  [OVS_DEFINE([HAVE_SKB_WARN_LRO])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [consume_skb])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_frag_page])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_has_frag_list])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [__skb_fill_page_desc])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_reset_mac_len])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_unclone])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_orphan_frags])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_get_hash(],
                  [OVS_DEFINE([HAVE_SKB_GET_HASH])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_clear_hash])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [int.skb_zerocopy(],
                  [OVS_DEFINE([HAVE_SKB_ZEROCOPY])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [u8.*l4_rxhash],
                  [OVS_DEFINE([HAVE_L4_RXHASH])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_ensure_writable])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_vlan_pop])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [__skb_vlan_pop])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_vlan_push])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_clear_hash_if_not_l4])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_postpush_rcsum])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [lco_csum])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_nfct])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_put_zero])

  OVS_GREP_IFELSE([$KSRC/include/linux/types.h], [bool],
                  [OVS_DEFINE([HAVE_BOOL_TYPE])])
  OVS_GREP_IFELSE([$KSRC/include/linux/types.h], [__wsum],
                  [OVS_DEFINE([HAVE_CSUM_TYPES])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/types.h], [__wsum],
                  [OVS_DEFINE([HAVE_CSUM_TYPES])])

  OVS_GREP_IFELSE([$KSRC/include/net/checksum.h], [csum_replace4])
  OVS_GREP_IFELSE([$KSRC/include/net/checksum.h], [csum_unfold])

  OVS_GREP_IFELSE([$KSRC/include/net/dst.h], [dst_discard_sk])
  OVS_GREP_IFELSE([$KSRC/include/net/dst.h], [__skb_dst_copy])

  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [genl_has_listeners])
  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [mcgrp_offset])
  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [parallel_ops])
  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [netlink_has_listeners(net->genl_sock],
                  [OVS_DEFINE([HAVE_GENL_HAS_LISTENERS_TAKES_NET])])
  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [genlmsg_parse])
  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [genl_notify.*family],
                  [OVS_DEFINE([HAVE_GENL_NOTIFY_TAKES_FAMILY])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/genetlink.h],
                        [genl_notify], [net],
                        [OVS_DEFINE([HAVE_GENL_NOTIFY_TAKES_NET])])


  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/genetlink.h],
                        [genl_multicast_group], [id])
  OVS_GREP_IFELSE([$KSRC/include/net/geneve.h], [geneve_hdr])

  OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [gre_cisco_register])
  OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [gre_handle_offloads])
  OVS_GREP_IFELSE([$KSRC/include/net/ipv6.h], [IP6_FH_F_SKIP_RH])
  OVS_GREP_IFELSE([$KSRC/include/net/ipv6.h], [ip6_local_out_sk])
  OVS_GREP_IFELSE([$KSRC/include/net/ipv6.h], [__ipv6_addr_jhash])
  OVS_GREP_IFELSE([$KSRC/include/net/ip6_fib.h], [rt6i.*u.dst],
                  [OVS_DEFINE([HAVE_RT6INFO_DST_UNION])])
  OVS_GREP_IFELSE([$KSRC/include/net/ip6_route.h], [ip6_frag.*sock],
                  [OVS_DEFINE([HAVE_IP_FRAGMENT_TAKES_SOCK])])

  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_64bit])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_get_be16])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_be16])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_be32])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_be64])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_in_addr])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_find_nested])
  OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_is_last])
  OVS_GREP_IFELSE([$KSRC/include/linux/netlink.h], [void.*netlink_set_err],
                  [OVS_DEFINE([HAVE_VOID_NETLINK_SET_ERR])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netlink.h],
                        [nla_parse], [netlink_ext_ack],
                        [OVS_DEFINE([HAVE_NETLINK_EXT_ACK])])

  OVS_GREP_IFELSE([$KSRC/include/net/sctp/checksum.h], [sctp_compute_cksum])

  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [ADD_ALL_VLANS_CMD],
                  [OVS_DEFINE([HAVE_VLAN_BUG_WORKAROUND])])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_insert_tag_set_proto])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [__vlan_insert_tag])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_get_protocol])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [skb_vlan_tagged])
  OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [eth_type_vlan])

  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/dst_metadata.h],
                        [metadata_dst_alloc], [metadata_type])

  OVS_GREP_IFELSE([$KSRC/include/linux/u64_stats_sync.h], [u64_stats_fetch_begin_irq])

  OVS_GREP_IFELSE([$KSRC/include/net/vxlan.h], [struct vxlan_metadata],
                  [OVS_DEFINE([HAVE_VXLAN_METADATA])])
  OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [udp_flow_src_port],
                  [OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [inet_get_local_port_range(net],
                                   [OVS_DEFINE([HAVE_UDP_FLOW_SRC_PORT])])])
  OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [udp_v4_check])
  OVS_GREP_IFELSE([$KSRC/include/net/udp_tunnel.h], [udp_tunnel_gro_complete])
  OVS_GREP_IFELSE([$KSRC/include/net/udp_tunnel.h], [sk_buff.*udp_tunnel_handle_offloads],
                  [OVS_DEFINE([HAVE_UDP_TUNNEL_HANDLE_OFFLOAD_RET_SKB])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/udp_tunnel.h], [udp_tunnel_sock_cfg],
                        [gro_receive])

  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [ignore_df],
                  [OVS_DEFINE([HAVE_IGNORE_DF_RENAME])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/netdevice.h], [NET_NAME_UNKNOWN],
                  [OVS_DEFINE([HAVE_NET_NAME_UNKNOWN])])

  OVS_GREP_IFELSE([$KSRC/include/net/sock.h], [sk_no_check_tx])
  OVS_GREP_IFELSE([$KSRC/include/linux/udp.h], [no_check6_tx])
  OVS_GREP_IFELSE([$KSRC/include/linux/utsrelease.h], [el6],
                  [OVS_DEFINE([HAVE_RHEL6_PER_CPU])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/protocol.h],
                        [udp_add_offload], [net],
                        [OVS_DEFINE([HAVE_UDP_ADD_OFFLOAD_TAKES_NET])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/ipv6/nf_defrag_ipv6.h],
                        [nf_defrag_ipv6_enable], [net],
                        [OVS_DEFINE([HAVE_DEFRAG_ENABLE_TAKES_NET])])
  OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [family_list],
                        [OVS_DEFINE([HAVE_GENL_FAMILY_LIST])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device],
                        [needs_free_netdev],
                        [OVS_DEFINE([HAVE_NEEDS_FREE_NETDEV])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/vxlan.h], [vxlan_dev], [cfg],
                        [OVS_DEFINE([HAVE_VXLAN_DEV_CFG])])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_helper.h],
                  [nf_conntrack_helper_put],
                  [OVS_DEFINE(HAVE_NF_CONNTRACK_HELPER_PUT)])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],[[[[:space:]]]SKB_GSO_UDP[[[:space:]]]],
                  [OVS_DEFINE([HAVE_SKB_GSO_UDP])])
  OVS_GREP_IFELSE([$KSRC/include/net/dst.h],[DST_NOCACHE],
                  [OVS_DEFINE([HAVE_DST_NOCACHE])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/rtnetlink.h], [rtnl_link_ops],
                        [extack],
                  [OVS_DEFINE([HAVE_EXT_ACK_IN_RTNL_LINKOPS])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_ops],
                        [list],
                        [OVS_DEFINE([HAVE_LIST_IN_NF_HOOK_OPS])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/netfilter/nf_conntrack_common.h],
                  [IP_CT_UNTRACKED])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netdevice.h],
                        [netdev_master_upper_dev_link], [extack],
                        [OVS_DEFINE([HAVE_UPPER_DEV_LINK_EXTACK])])
  OVS_GREP_IFELSE([$KSRC/include/linux/compiler_types.h],
                  [__LINUX_COMPILER_TYPES_H],
                  [OVS_DEFINE([HAVE_LINUX_COMPILER_TYPES_H])])
  OVS_GREP_IFELSE([$KSRC/include/linux/timekeeping.h],
                  [ktime_get_ts64],
                  [OVS_DEFINE([HAVE_KTIME_GET_TS64])])
  OVS_GREP_IFELSE([$KSRC/include/net/net_namespace.h],
                  [EXPORT_SYMBOL_GPL(peernet2id_alloc)],
                  [OVS_DEFINE([HAVE_PEERNET2ID_ALLOC])])
  OVS_GREP_IFELSE([$KSRC/include/linux/timekeeping.h],
                  [ktime_get_ns],
                  [OVS_DEFINE([HAVE_KTIME_GET_NS])])
  OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h],
                  frag_percpu_counter_batch[],
                  [OVS_DEFINE([HAVE_FRAG_PERCPU_COUNTER_BATCH])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [null_compute_pseudo],
                  [OVS_DEFINE([HAVE_NULL_COMPUTE_PSEUDO])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [__skb_checksum_convert],
                  [OVS_DEFINE([HAVE_SKB_CHECKSUM_CONVERT])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device],
                        [max_mtu],
                        [OVS_DEFINE([HAVE_NET_DEVICE_MAX_MTU])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/ip6_tunnel.h], [__ip6_tnl_parm],
                        [erspan_ver],
                        [OVS_DEFINE([HAVE_IP6_TNL_PARM_ERSPAN_VER])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [SKB_GSO_IPXIP6],
                  [OVS_DEFINE([HAVE_SKB_GSO_IPXIP6])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ipv6.h],
                        [ip6_make_flowlabel], [fl6],
                        [OVS_DEFINE([HAVE_IP6_MAKE_FLOWLABEL_FL6])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/ipv6.h], [netns_sysctl_ipv6],
                        [auto_flowlabels],
                        [OVS_DEFINE([HAVE_NETNS_SYSCTL_IPV6_AUTO_FLOWLABELS])])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h],
                  [netif_keep_dst],
                  [OVS_DEFINE([HAVE_NETIF_KEEP_DST])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device_ops],
                        [ndo_get_iflink],
                        [OVS_DEFINE([HAVE_NDO_GET_IFLINK])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [skb_set_inner_ipproto],
                  [OVS_DEFINE([HAVE_SKB_SET_INNER_IPPROTO])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [tunnel_encap_types],
                  [OVS_DEFINE([HAVE_TUNNEL_ENCAP_TYPES])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_IPTUN_ENCAP_TYPE],
                  [OVS_DEFINE([HAVE_IFLA_IPTUN_ENCAP_TYPE])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_IPTUN_COLLECT_METADATA],
                  [OVS_DEFINE([HAVE_IFLA_IPTUN_COLLECT_METADATA])])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_GRE_ENCAP_DPORT])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_GRE_COLLECT_METADATA])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_GRE_IGNORE_DF])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_GRE_FWMARK])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_GRE_ERSPAN_INDEX])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_GRE_ERSPAN_HWID])
  OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h],
                  [IFLA_IPTUN_FWMARK])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/skbuff.h], [sk_buff],
                        [csum_valid],
                        [OVS_DEFINE([HAVE_SKBUFF_CSUM_VALID])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/skbuff.h], [sk_buff],
                        [vlan_present],
                        [OVS_DEFINE([HAVE_SKBUFF_VLAN_PRESENT])])
  OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h],
                  [skb_checksum_simple_validate])
  OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h],
                  [void.*ndo_get_stats64],
                  [OVS_DEFINE([HAVE_VOID_NDO_GET_STATS64])])
  OVS_GREP_IFELSE([$KSRC/include/linux/timer.h], [init_timer_deferrable],
                  [OVS_DEFINE([HAVE_INIT_TIMER_DEFERRABLE])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ip_tunnels.h],
                        [ip_tunnel_info_opts_set], [flags],
                        [OVS_DEFINE([HAVE_IP_TUNNEL_INFO_OPTS_SET_FLAGS])])
  OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frags],
                        [rnd],
                        [OVS_DEFINE([HAVE_INET_FRAGS_RND])])
  OVS_GREP_IFELSE([$KSRC/include/linux/overflow.h], [__LINUX_OVERFLOW_H],
                  [OVS_DEFINE([HAVE_OVERFLOW_H])])
  OVS_GREP_IFELSE([$KSRC/include/linux/overflow.h], [struct_size],
                  [OVS_DEFINE([HAVE_STRUCT_SIZE])])
  OVS_GREP_IFELSE([$KSRC/include/linux/mm.h], [kvmalloc_array],
                  [OVS_DEFINE([HAVE_KVMALLOC_ARRAY])])
  OVS_GREP_IFELSE([$KSRC/include/linux/mm.h], [kvmalloc_node],
                  [OVS_DEFINE([HAVE_KVMALLOC_NODE])])
  OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_l3proto.h],
                  [nf_conntrack_l3proto],
                  [OVS_DEFINE([HAVE_NF_CONNTRACK_L3PROATO_H])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_core.h],
                        [nf_conntrack_in], [nf_hook_state],
                        [OVS_DEFINE([HAVE_NF_CONNTRACK_IN_TAKES_NF_HOOK_STATE])])
  OVS_GREP_IFELSE([$KSRC/include/net/ipv6_frag.h], [IP6_DEFRAG_CONNTRACK_IN],
                  [OVS_DEFINE([HAVE_IPV6_FRAG_H])])
  OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_helper.h],
                        [nf_ct_helper_ext_add], [nf_conntrack_helper],
                        [OVS_DEFINE([HAVE_NF_CT_HELPER_EXT_ADD_TAKES_HELPER])])
  OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [gre_calc_hlen],
                  [OVS_DEFINE([HAVE_GRE_CALC_HLEN])])
  OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [ip_gre_calc_hlen],
                  [OVS_DEFINE([HAVE_IP_GRE_CALC_HLEN])])
  OVS_GREP_IFELSE([$KSRC/include/linux/rbtree.h], [rb_link_node_rcu],
                  [OVS_DEFINE([HAVE_RBTREE_RB_LINK_NODE_RCU])])

  if cmp -s datapath/linux/kcompat.h.new \
            datapath/linux/kcompat.h >/dev/null 2>&1; then
    rm datapath/linux/kcompat.h.new
  else
    mv datapath/linux/kcompat.h.new datapath/linux/kcompat.h
  fi
])
m4trace:acinclude.m4:1032: -1- AC_DEFUN([OVS_CHECK_IF_DL], [AC_CHECK_HEADER([net/if_dl.h],
                   [HAVE_IF_DL=yes],
                   [HAVE_IF_DL=no])
   AM_CONDITIONAL([HAVE_IF_DL], [test "$HAVE_IF_DL" = yes])
   if test "$HAVE_IF_DL" = yes; then
      AC_DEFINE([HAVE_IF_DL], [1],
                [Define to 1 if net/if_dl.h is available.])

      # On these platforms we use libpcap to access network devices.
      AC_SEARCH_LIBS([pcap_open_live], [pcap])
   fi])
m4trace:acinclude.m4:1051: -1- AC_DEFUN([OVS_CHECK_STRTOK_R], [AC_CACHE_CHECK(
     [whether strtok_r macro segfaults on some inputs],
     [ovs_cv_strtok_r_bug],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([#include <stdio.h>
                          #include <string.h>
                         ],
                         [[#if __GLIBC__ == 2 && __GLIBC_MINOR__ < 8
                           /* Assume bug is present, because relatively minor
                              changes in compiler settings (e.g. optimization
                              level) can make it crop up. */
                           return 1;
                           #else
                           char string[] = ":::";
                           char *save_ptr = (char *) 0xc0ffee;
                           char *token1, *token2;
                           token1 = strtok_r(string, ":", &save_ptr);
                           token2 = strtok_r(NULL, ":", &save_ptr);
                           freopen ("/dev/null", "w", stdout);
                           printf ("%s %s\n", token1, token2);
                           return 0;
                           #endif
                          ]])],
        [ovs_cv_strtok_r_bug=no],
        [ovs_cv_strtok_r_bug=yes],
        [ovs_cv_strtok_r_bug=yes])])
   if test $ovs_cv_strtok_r_bug = yes; then
     AC_DEFINE([HAVE_STRTOK_R_BUG], [1],
               [Define if strtok_r macro segfaults on some inputs])
   fi
])
m4trace:acinclude.m4:1091: -1- AC_DEFUN([_OVS_CHECK_CC_OPTION], [dnl
  m4_define([ovs_cv_name], [ovs_cv_[]m4_translit([$1], [-= ], [__])])dnl
  AC_CACHE_CHECK([whether $CC accepts $1], [ovs_cv_name], 
    [ovs_save_CFLAGS="$CFLAGS"
     dnl Include -Werror in the compiler options, because without -Werror
     dnl clang's GCC-compatible compiler driver does not return a failure
     dnl exit status even though it complains about options it does not
     dnl understand.
     dnl
     dnl Also, check stderr as gcc exits with status 0 for options
     dnl rejected at getopt level.
     dnl    % touch /tmp/a.c
     dnl    % gcc -g -c -Werror -Qunused-arguments /tmp/a.c; echo $?
     dnl    gcc: unrecognized option '-Qunused-arguments'
     dnl    0
     dnl    %
     dnl
     dnl In addition, GCC does not complain about a -Wno-<foo> option that
     dnl it does not understand, unless it has another error to report, so
     dnl instead of testing for -Wno-<foo>, test for the positive version.
     CFLAGS="$CFLAGS $WERROR m4_bpatsubst([$1], [-Wno-], [-W])"
     AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE([int x;])],
       [if test -s conftest.err && grep "unrecognized option" conftest.err
        then
          ovs_cv_name[]=no
        else
          ovs_cv_name[]=yes
        fi],
       [ovs_cv_name[]=no])
     CFLAGS="$ovs_save_CFLAGS"])
  if test $ovs_cv_name = yes; then
    m4_if([$2], [], [:], [$2])
  else
    m4_if([$3], [], [:], [$3])
  fi
])
m4trace:acinclude.m4:1133: -1- AC_DEFUN([OVS_CHECK_WERROR], [WERROR=
   _OVS_CHECK_CC_OPTION([-Werror], [WERROR=-Werror])])
m4trace:acinclude.m4:1140: -1- AC_DEFUN([OVS_CHECK_CC_OPTION], [AC_REQUIRE([OVS_CHECK_WERROR])
   _OVS_CHECK_CC_OPTION([$1], [$2], [$3])])
m4trace:acinclude.m4:1148: -1- AC_DEFUN([OVS_ENABLE_OPTION], [OVS_CHECK_CC_OPTION([$1], [WARNING_FLAGS="$WARNING_FLAGS $1"])
   AC_SUBST([WARNING_FLAGS])])
m4trace:acinclude.m4:1157: -1- AC_DEFUN([OVS_CONDITIONAL_CC_OPTION], [OVS_CHECK_CC_OPTION(
    [$1], [ovs_have_cc_option=yes], [ovs_have_cc_option=no])
   AM_CONDITIONAL([$2], [test $ovs_have_cc_option = yes])])
m4trace:acinclude.m4:1164: -1- AC_DEFUN([OVS_CHECK_XENSERVER_VERSION], [AC_CACHE_CHECK([XenServer release], [ovs_cv_xsversion],
    [if test -e /etc/redhat-release; then
       ovs_cv_xsversion=`sed -n 's/^XenServer DDK release \([[^-]]*\)-.*/\1/p' /etc/redhat-release`
     fi
     if test -z "$ovs_cv_xsversion"; then
       ovs_cv_xsversion=none
     fi])
  case $ovs_cv_xsversion in
    none)
      ;;

    [[1-9]][[0-9]]* |                    dnl XenServer 10 or later
    [[6-9]]* |                           dnl XenServer 6 or later
    5.[[7-9]]* |                         dnl XenServer 5.7 or later
    5.6.[[1-9]][[0-9]][[0-9]][[0-9]]* |  dnl XenServer 5.6.1000 or later
    5.6.[[2-9]][[0-9]][[0-9]]* |         dnl XenServer 5.6.200 or later
    5.6.1[[0-9]][[0-9]])                 dnl Xenserver 5.6.100 or later
      ;;

    *)
      AC_MSG_ERROR([This appears to be XenServer $ovs_cv_xsversion, but only XenServer 5.6.100 or later is supported.  (If you are really using a supported version of XenServer, you may override this error message by specifying 'ovs_cv_xsversion=5.6.100' on the "configure" command line.)])
      ;;
  esac])
m4trace:acinclude.m4:1193: -1- AC_DEFUN([OVS_CHECK_SPARSE_TARGET], [AC_CACHE_CHECK(
    [target hint for cgcc],
    [ac_cv_sparse_target],
    [AS_CASE([`$CC -dumpmachine 2>/dev/null`],
       [i?86-* | athlon-*], [ac_cv_sparse_target=x86],
       [x86_64-*], [ac_cv_sparse_target=x86_64],
       [ac_cv_sparse_target=other])])
   AS_CASE([$ac_cv_sparse_target],
     [x86], [SPARSEFLAGS= CGCCFLAGS="-target=i86 -target=host_os_specs"],
     [x86_64], [SPARSEFLAGS=-m64 CGCCFLAGS="-target=x86_64 -target=host_os_specs"],
     [SPARSEFLAGS= CGCCFLAGS=])

   dnl Get the the default defines for vector instructions from compiler to
   dnl allow "sparse" correctly check the same code that will be built.
   dnl Required for checking DPDK headers.
   AC_MSG_CHECKING([vector options for cgcc])
   VECTOR=$($CC -dM -E - < /dev/null | grep -E "MMX|SSE|AVX" | \
            cut -c 9- | sed 's/ /=/' | sed 's/^/-D/' | tr '\n' ' ')
   AC_MSG_RESULT([$VECTOR])
   CGCCFLAGS="$CGCCFLAGS $VECTOR"

   AC_SUBST([SPARSEFLAGS])
   AC_SUBST([CGCCFLAGS])])
m4trace:acinclude.m4:1224: -2- m4_pattern_allow([^SPARSE_EXTRA_INCLUDES$])
m4trace:acinclude.m4:1223: -1- AC_DEFUN([OVS_SPARSE_EXTRA_INCLUDES], [SPARSE_EXTRA_INCLUDES=`$CC -v -E - </dev/null 2>&1 >/dev/null | sed -n -e '/^#include.*search.*starts.*here:/,/^End.*of.*search.*list\./s/^ \(.*\)/-I \1/p' |grep -v /usr/lib | grep -x -v '\-I /usr/include' | tr \\\n ' ' ` 
])
m4trace:acinclude.m4:1228: -1- AC_DEFUN([OVS_ENABLE_SPARSE], [AC_REQUIRE([OVS_CHECK_SPARSE_TARGET])
   AC_REQUIRE([OVS_SPARSE_EXTRA_INCLUDES])
   : ${SPARSE=sparse}
   AC_SUBST([SPARSE])
   AC_CONFIG_COMMANDS_PRE(
     [CC='$(if $(C:0=),env REAL_CC="'"$CC"'" CHECK="$(SPARSE) $(SPARSE_WERROR) -I $(top_srcdir)/include/sparse $(SPARSEFLAGS) $(SPARSE_EXTRA_INCLUDES) " cgcc $(CGCCFLAGS),'"$CC"')'])

   AC_ARG_ENABLE(
     [sparse],
     [AC_HELP_STRING([--enable-sparse], [Run "sparse" by default])],
     [], [enable_sparse=no])
   AM_CONDITIONAL([ENABLE_SPARSE_BY_DEFAULT], [test $enable_sparse = yes])])
m4trace:acinclude.m4:1247: -2- m4_pattern_allow([^OVS_CTAGS_IDENTIFIERS_LIST$])
m4trace:acinclude.m4:1246: -1- AC_DEFUN([OVS_CTAGS_IDENTIFIERS], [OVS_CTAGS_IDENTIFIERS_LIST=`printf %s '-I "'; sed -n 's/^#define \(OVS_[A-Z_]\+\)(\.\.\.)$/\1+/p' ${srcdir}/include/openvswitch/compiler.h  | tr \\\n ' ' ; printf '"'` 
])
m4trace:acinclude.m4:1268: -1- AC_DEFUN([OVS_CHECK_PTHREAD_SET_NAME], [AC_CHECK_FUNCS([pthread_set_name_np])
   if test $ac_cv_func_pthread_set_name_np != yes; then
     AC_CACHE_CHECK(
       [for pthread_setname_np() variant],
       [ovs_cv_pthread_setname_np],
       [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([#include <pthread.h>
  ], [pthread_setname_np(pthread_self(), "name");])],
         [ovs_cv_pthread_setname_np=glibc],
         [AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([#include <pthread.h>
], [pthread_setname_np(pthread_self(), "%s", "name");])],
           [ovs_cv_pthread_setname_np=netbsd],
           [ovs_cv_pthread_setname_np=none])])])
     case $ovs_cv_pthread_setname_np in # (
       glibc)
          AC_DEFINE(
            [HAVE_GLIBC_PTHREAD_SETNAME_NP], [1],
            [Define to 1 if pthread_setname_np() is available and takes 2 parameters (like glibc).])
          ;; # (
       netbsd)
          AC_DEFINE(
            [HAVE_NETBSD_PTHREAD_SETNAME_NP], [1],
            [Define to 1 if pthread_setname_np() is available and takes 3 parameters (like NetBSD).])
          ;;
     esac
   fi])
m4trace:acinclude.m4:1302: -1- AC_DEFUN([OVS_CHECK_LINUX_HOST], [AC_CACHE_CHECK(
     [whether __linux__ is defined],
     [ovs_cv_linux],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([enum { LINUX = __linux__};], [])],
        [ovs_cv_linux=true],
        [ovs_cv_linux=false])])
   AM_CONDITIONAL([LINUX], [$ovs_cv_linux])])
m4trace:configure.ac:16: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:16: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:16: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:16: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:16: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:16: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:16: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:16: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:18: -1- AC_CONFIG_MACRO_DIR([m4])
m4trace:configure.ac:22: -1- AM_INIT_AUTOMAKE([tar-pax])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:22: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:22: -1- AM_AUTOMAKE_VERSION([1.15.1])
m4trace:configure.ac:22: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:22: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:22: -1- _AM_SET_OPTIONS([tar-pax])
m4trace:configure.ac:22: -1- _AM_SET_OPTION([tar-pax])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:22: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:22: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:22: -1- AM_SANITY_CHECK
m4trace:configure.ac:22: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:22: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:22: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:22: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:22: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:22: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:22: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:22: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:22: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:22: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:22: -1- _AM_PROG_TAR([pax])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:22: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:22: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:22: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:22: -1- AM_RUN_LOG([cat conftest.dir/file])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:22: -1- AM_SILENT_RULES
m4trace:configure.ac:22: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:22: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:22: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:24: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:24: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:24: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:24: -1- AM_SET_DEPDIR
m4trace:configure.ac:24: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:24: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:24: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:24: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:24: -1- AM_DEP_TRACK
m4trace:configure.ac:24: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:24: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:24: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:24: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:24: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:24: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:24: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:24: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:24: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:24: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:24: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:24: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:24: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:25: -1- AM_PROG_CC_C_O
m4trace:configure.ac:26: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:26: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:26: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:26: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:26: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:26: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:26: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:29: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:29: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:30: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:31: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:31: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:33: -1- AM_MISSING_PROG([AUTOM4TE], [autom4te])
m4trace:configure.ac:33: -1- m4_pattern_allow([^AUTOM4TE$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:35: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:40: -1- m4_pattern_forbid([LT_INIT])
m4trace:configure.ac:71: -1- m4_pattern_allow([^LT_CURRENT$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^LT_REVISION$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^LT_AGE$])
m4trace:configure.ac:83: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^HAVE_STRERROR_R$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^STRERROR_R_CHAR_P$])
m4trace:configure.ac:86: -1- OVS_CHECK_WIN64
m4trace:configure.ac:86: -1- m4_pattern_allow([^MSVC64_LDFLAGS$])
m4trace:configure.ac:86: -1- m4_pattern_allow([^MSVC_PLATFORM$])
m4trace:configure.ac:87: -1- OVS_CHECK_WIN32
m4trace:configure.ac:87: -1- AM_CONDITIONAL([WIN32], [test "$WIN32" = yes])
m4trace:configure.ac:87: -1- m4_pattern_allow([^WIN32_TRUE$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^WIN32_FALSE$])
m4trace:configure.ac:87: -1- _AM_SUBST_NOTMAKE([WIN32_TRUE])
m4trace:configure.ac:87: -1- _AM_SUBST_NOTMAKE([WIN32_FALSE])
m4trace:configure.ac:87: -1- m4_pattern_allow([^PTHREAD_WIN32_DIR_DLL_WIN_FORM$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^PTHREAD_WIN32_DIR_DLL$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^PTHREAD_INCLUDES$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^PTHREAD_LDFLAGS$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^MSVC_CFLAGS$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^MSVC_CFLAGS$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^WIN32$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^HAVE_STRUCT_TIMESPEC$])
m4trace:configure.ac:88: -1- OVS_CHECK_VISUAL_STUDIO_DDK
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_CONFIG$])
m4trace:configure.ac:88: -1- AM_CONDITIONAL([VSTUDIO_WIN8], [test -n "$VSTUDIO_WIN8"])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_WIN8_TRUE$])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_WIN8_FALSE$])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_WIN8_TRUE])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_WIN8_FALSE])
m4trace:configure.ac:88: -1- AM_CONDITIONAL([VSTUDIO_WIN8_1], [test -n "$VSTUDIO_WIN8_1"])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_WIN8_1_TRUE$])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_WIN8_1_FALSE$])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_WIN8_1_TRUE])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_WIN8_1_FALSE])
m4trace:configure.ac:88: -1- AM_CONDITIONAL([VSTUDIO_WIN10], [test -n "$VSTUDIO_WIN10"])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_WIN10_TRUE$])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_WIN10_FALSE$])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_WIN10_TRUE])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_WIN10_FALSE])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_DDK$])
m4trace:configure.ac:88: -1- AM_CONDITIONAL([VSTUDIO_DDK], [test -n "$VSTUDIO_CONFIG"])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_DDK_TRUE$])
m4trace:configure.ac:88: -1- m4_pattern_allow([^VSTUDIO_DDK_FALSE$])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_DDK_TRUE])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([VSTUDIO_DDK_FALSE])
m4trace:configure.ac:89: -1- OVS_CHECK_COVERAGE
m4trace:configure.ac:89: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
m4/openvswitch.m4:20: OVS_CHECK_COVERAGE is expanded from...
configure.ac:89: the top level])
m4trace:configure.ac:90: -1- OVS_CHECK_NDEBUG
m4trace:configure.ac:90: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
m4/openvswitch.m4:50: OVS_CHECK_NDEBUG is expanded from...
configure.ac:90: the top level])
m4trace:configure.ac:90: -1- AM_CONDITIONAL([NDEBUG], [test x$ndebug = xtrue])
m4trace:configure.ac:90: -1- m4_pattern_allow([^NDEBUG_TRUE$])
m4trace:configure.ac:90: -1- m4_pattern_allow([^NDEBUG_FALSE$])
m4trace:configure.ac:90: -1- _AM_SUBST_NOTMAKE([NDEBUG_TRUE])
m4trace:configure.ac:90: -1- _AM_SUBST_NOTMAKE([NDEBUG_FALSE])
m4trace:configure.ac:91: -1- OVS_CHECK_NETLINK
m4trace:configure.ac:91: -1- AM_CONDITIONAL([HAVE_NETLINK], [test "$HAVE_NETLINK" = yes])
m4trace:configure.ac:91: -1- m4_pattern_allow([^HAVE_NETLINK_TRUE$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^HAVE_NETLINK_FALSE$])
m4trace:configure.ac:91: -1- _AM_SUBST_NOTMAKE([HAVE_NETLINK_TRUE])
m4trace:configure.ac:91: -1- _AM_SUBST_NOTMAKE([HAVE_NETLINK_FALSE])
m4trace:configure.ac:91: -1- m4_pattern_allow([^HAVE_NETLINK$])
m4trace:configure.ac:92: -1- OVS_CHECK_OPENSSL
m4trace:configure.ac:92: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
m4/openvswitch.m4:246: OVS_CHECK_OPENSSL is expanded from...
configure.ac:92: the top level])
m4trace:configure.ac:92: -1- AX_CHECK_OPENSSL([HAVE_OPENSSL=yes], [HAVE_OPENSSL=no
          if test "$ssl" = check; then
            AC_MSG_WARN([Cannot find openssl:

$SSL_PKG_ERRORS

OpenFlow connections over SSL will not be supported.
(You may use --disable-ssl to suppress this warning.)])
          else
            AC_MSG_ERROR([Cannot find openssl (use --disable-ssl to configure without SSL support)])
          fi])
m4trace:configure.ac:92: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^SSL_INCLUDES$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^SSL_LIBS$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^SSL_LDFLAGS$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^SSL_DIR$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^HAVE_OPENSSL$])
m4trace:configure.ac:92: -1- AM_CONDITIONAL([HAVE_OPENSSL], [test "$HAVE_OPENSSL" = yes])
m4trace:configure.ac:92: -1- m4_pattern_allow([^HAVE_OPENSSL_TRUE$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^HAVE_OPENSSL_FALSE$])
m4trace:configure.ac:92: -1- _AM_SUBST_NOTMAKE([HAVE_OPENSSL_TRUE])
m4trace:configure.ac:92: -1- _AM_SUBST_NOTMAKE([HAVE_OPENSSL_FALSE])
m4trace:configure.ac:92: -1- m4_pattern_allow([^HAVE_OPENSSL$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^OPENSSL_SUPPORTS_SNI$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^OPENSSL_SUPPORTS_SNI$])
m4trace:configure.ac:93: -1- OVS_CHECK_LIBCAPNG
m4trace:configure.ac:93: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
m4/openvswitch.m4:210: OVS_CHECK_LIBCAPNG is expanded from...
configure.ac:93: the top level])
m4trace:configure.ac:93: -1- m4_pattern_allow([^HAVE_LIBCAPNG$])
m4trace:configure.ac:93: -1- AM_CONDITIONAL([HAVE_LIBCAPNG], [test "$HAVE_LIBCAPNG" = yes])
m4trace:configure.ac:93: -1- m4_pattern_allow([^HAVE_LIBCAPNG_TRUE$])
m4trace:configure.ac:93: -1- m4_pattern_allow([^HAVE_LIBCAPNG_FALSE$])
m4trace:configure.ac:93: -1- _AM_SUBST_NOTMAKE([HAVE_LIBCAPNG_TRUE])
m4trace:configure.ac:93: -1- _AM_SUBST_NOTMAKE([HAVE_LIBCAPNG_FALSE])
m4trace:configure.ac:93: -1- m4_pattern_allow([^HAVE_LIBCAPNG$])
m4trace:configure.ac:93: -1- m4_pattern_allow([^CAPNG_LDADD$])
m4trace:configure.ac:94: -1- OVS_CHECK_LOGDIR
m4trace:configure.ac:94: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
m4/openvswitch.m4:324: OVS_CHECK_LOGDIR is expanded from...
configure.ac:94: the top level])
m4trace:configure.ac:94: -1- m4_pattern_allow([^LOGDIR$])
m4trace:configure.ac:95: -1- OVS_CHECK_PYTHON2
m4trace:configure.ac:95: -1- m4_pattern_allow([^HAVE_PYTHON2$])
m4trace:configure.ac:95: -1- AM_MISSING_PROG([PYTHON2], [python2])
m4trace:configure.ac:95: -1- m4_pattern_allow([^PYTHON2$])
m4trace:configure.ac:95: -1- AM_CONDITIONAL([HAVE_PYTHON2], [test "$HAVE_PYTHON2" = yes])
m4trace:configure.ac:95: -1- m4_pattern_allow([^HAVE_PYTHON2_TRUE$])
m4trace:configure.ac:95: -1- m4_pattern_allow([^HAVE_PYTHON2_FALSE$])
m4trace:configure.ac:95: -1- _AM_SUBST_NOTMAKE([HAVE_PYTHON2_TRUE])
m4trace:configure.ac:95: -1- _AM_SUBST_NOTMAKE([HAVE_PYTHON2_FALSE])
m4trace:configure.ac:96: -1- OVS_CHECK_PYTHON3
m4trace:configure.ac:96: -1- m4_pattern_allow([^HAVE_PYTHON3$])
m4trace:configure.ac:96: -1- AM_MISSING_PROG([PYTHON3], [python3])
m4trace:configure.ac:96: -1- m4_pattern_allow([^PYTHON3$])
m4trace:configure.ac:96: -1- AM_CONDITIONAL([HAVE_PYTHON3], [test "$HAVE_PYTHON3" = yes])
m4trace:configure.ac:96: -1- m4_pattern_allow([^HAVE_PYTHON3_TRUE$])
m4trace:configure.ac:96: -1- m4_pattern_allow([^HAVE_PYTHON3_FALSE$])
m4trace:configure.ac:96: -1- _AM_SUBST_NOTMAKE([HAVE_PYTHON3_TRUE])
m4trace:configure.ac:96: -1- _AM_SUBST_NOTMAKE([HAVE_PYTHON3_FALSE])
m4trace:configure.ac:97: -1- OVS_CHECK_PYTHON
m4trace:configure.ac:97: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:97: -1- m4_pattern_allow([^HAVE_PYTHON$])
m4trace:configure.ac:97: -1- AM_CONDITIONAL([HAVE_PYTHON], [test "$HAVE_PYTHON" = yes])
m4trace:configure.ac:97: -1- m4_pattern_allow([^HAVE_PYTHON_TRUE$])
m4trace:configure.ac:97: -1- m4_pattern_allow([^HAVE_PYTHON_FALSE$])
m4trace:configure.ac:97: -1- _AM_SUBST_NOTMAKE([HAVE_PYTHON_TRUE])
m4trace:configure.ac:97: -1- _AM_SUBST_NOTMAKE([HAVE_PYTHON_FALSE])
m4trace:configure.ac:98: -1- OVS_CHECK_FLAKE8
m4trace:configure.ac:98: -1- AM_CONDITIONAL([HAVE_FLAKE8], [test "$ovs_cv_flake8" = yes])
m4trace:configure.ac:98: -1- m4_pattern_allow([^HAVE_FLAKE8_TRUE$])
m4trace:configure.ac:98: -1- m4_pattern_allow([^HAVE_FLAKE8_FALSE$])
m4trace:configure.ac:98: -1- _AM_SUBST_NOTMAKE([HAVE_FLAKE8_TRUE])
m4trace:configure.ac:98: -1- _AM_SUBST_NOTMAKE([HAVE_FLAKE8_FALSE])
m4trace:configure.ac:99: -1- OVS_CHECK_SPHINX
m4trace:configure.ac:99: -1- AM_CONDITIONAL([HAVE_SPHINX], [test "$ovs_cv_sphinx" = yes])
m4trace:configure.ac:99: -1- m4_pattern_allow([^HAVE_SPHINX_TRUE$])
m4trace:configure.ac:99: -1- m4_pattern_allow([^HAVE_SPHINX_FALSE$])
m4trace:configure.ac:99: -1- _AM_SUBST_NOTMAKE([HAVE_SPHINX_TRUE])
m4trace:configure.ac:99: -1- _AM_SUBST_NOTMAKE([HAVE_SPHINX_FALSE])
m4trace:configure.ac:100: -1- OVS_CHECK_DOT
m4trace:configure.ac:100: -1- AM_CONDITIONAL([HAVE_DOT], [test "$ovs_cv_dot" = yes])
m4trace:configure.ac:100: -1- m4_pattern_allow([^HAVE_DOT_TRUE$])
m4trace:configure.ac:100: -1- m4_pattern_allow([^HAVE_DOT_FALSE$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([HAVE_DOT_TRUE])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([HAVE_DOT_FALSE])
m4trace:configure.ac:101: -1- OVS_CHECK_IF_DL
m4trace:configure.ac:101: -1- AM_CONDITIONAL([HAVE_IF_DL], [test "$HAVE_IF_DL" = yes])
m4trace:configure.ac:101: -1- m4_pattern_allow([^HAVE_IF_DL_TRUE$])
m4trace:configure.ac:101: -1- m4_pattern_allow([^HAVE_IF_DL_FALSE$])
m4trace:configure.ac:101: -1- _AM_SUBST_NOTMAKE([HAVE_IF_DL_TRUE])
m4trace:configure.ac:101: -1- _AM_SUBST_NOTMAKE([HAVE_IF_DL_FALSE])
m4trace:configure.ac:101: -1- m4_pattern_allow([^HAVE_IF_DL$])
m4trace:configure.ac:102: -1- OVS_CHECK_STRTOK_R
m4trace:configure.ac:102: -1- m4_pattern_allow([^HAVE_STRTOK_R_BUG$])
m4trace:configure.ac:103: -1- OVS_CHECK_LINUX_AF_XDP
m4trace:configure.ac:103: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
acinclude.m4:251: OVS_CHECK_LINUX_AF_XDP is expanded from...
configure.ac:103: the top level])
m4trace:configure.ac:103: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:103: -1- m4_pattern_allow([^HAVE_AF_XDP$])
m4trace:configure.ac:103: -1- m4_pattern_allow([^LIBBPF_LDADD$])
m4trace:configure.ac:103: -1- AM_CONDITIONAL([HAVE_AF_XDP], [test "$AF_XDP_ENABLE" = true])
m4trace:configure.ac:103: -1- m4_pattern_allow([^HAVE_AF_XDP_TRUE$])
m4trace:configure.ac:103: -1- m4_pattern_allow([^HAVE_AF_XDP_FALSE$])
m4trace:configure.ac:103: -1- _AM_SUBST_NOTMAKE([HAVE_AF_XDP_TRUE])
m4trace:configure.ac:103: -1- _AM_SUBST_NOTMAKE([HAVE_AF_XDP_FALSE])
m4trace:configure.ac:104: -1- m4_pattern_allow([^HAVE_DECL_SYS_SIGLIST$])
m4trace:configure.ac:105: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC$])
m4trace:configure.ac:105: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_MTIMENSEC$])
m4trace:configure.ac:107: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_FLAGSHIGH$])
m4trace:configure.ac:108: -1- m4_pattern_allow([^HAVE_STRUCT_MMSGHDR_MSG_LEN$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID$])
m4trace:configure.ac:116: -1- m4_pattern_allow([^HAVE_NET_IF_MIB_H$])
m4trace:configure.ac:119: -1- OVS_CHECK_PKIDIR
m4trace:configure.ac:119: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
m4/openvswitch.m4:303: OVS_CHECK_PKIDIR is expanded from...
configure.ac:119: the top level])
m4trace:configure.ac:119: -1- m4_pattern_allow([^PKIDIR$])
m4trace:configure.ac:120: -1- OVS_CHECK_RUNDIR
m4trace:configure.ac:120: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
m4/openvswitch.m4:313: OVS_CHECK_RUNDIR is expanded from...
configure.ac:120: the top level])
m4trace:configure.ac:120: -1- m4_pattern_allow([^RUNDIR$])
m4trace:configure.ac:121: -1- OVS_CHECK_DBDIR
m4trace:configure.ac:121: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
m4/openvswitch.m4:334: OVS_CHECK_DBDIR is expanded from...
configure.ac:121: the top level])
m4trace:configure.ac:121: -1- m4_pattern_allow([^DBDIR$])
m4trace:configure.ac:122: -1- OVS_CHECK_BACKTRACE
m4trace:configure.ac:122: -1- m4_pattern_allow([^HAVE_BACKTRACE$])
m4trace:configure.ac:123: -1- OVS_CHECK_PERF_EVENT
m4trace:configure.ac:123: -1- m4_pattern_allow([^HAVE_LINUX_PERF_EVENT_H$])
m4trace:configure.ac:124: -1- OVS_CHECK_VALGRIND
m4trace:configure.ac:124: -1- m4_pattern_allow([^HAVE_VALGRIND_VALGRIND_H$])
m4trace:configure.ac:125: -1- OVS_CHECK_SOCKET_LIBS
m4trace:configure.ac:125: -1- m4_pattern_allow([^HAVE_LIBSOCKET$])
m4trace:configure.ac:126: -1- OVS_CHECK_XENSERVER_VERSION
m4trace:configure.ac:127: -1- OVS_CHECK_GROFF
m4trace:configure.ac:127: -1- AM_CONDITIONAL([HAVE_GROFF], [test "$ovs_cv_groff" = yes])
m4trace:configure.ac:127: -1- m4_pattern_allow([^HAVE_GROFF_TRUE$])
m4trace:configure.ac:127: -1- m4_pattern_allow([^HAVE_GROFF_FALSE$])
m4trace:configure.ac:127: -1- _AM_SUBST_NOTMAKE([HAVE_GROFF_TRUE])
m4trace:configure.ac:127: -1- _AM_SUBST_NOTMAKE([HAVE_GROFF_FALSE])
m4trace:configure.ac:128: -1- OVS_CHECK_TLS
m4trace:configure.ac:128: -1- m4_pattern_allow([^HAVE_THREAD_LOCAL$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^HAVE___THREAD$])
m4trace:configure.ac:129: -1- OVS_CHECK_ATOMIC_LIBS
m4trace:configure.ac:130: -1- OVS_CHECK_GCC4_ATOMICS
m4trace:configure.ac:130: -1- m4_pattern_allow([^HAVE_GCC4_ATOMICS$])
m4trace:configure.ac:131: -1- OVS_CHECK_ATOMIC_ALWAYS_LOCK_FREE([1])
m4trace:configure.ac:131: -1- AC_COMPUTE_INT([ovs_cv_atomic_always_lock_free_1], [__atomic_always_lock_free(1, 0)], [], [ovs_cv_atomic_always_lock_free_1=unsupported])
m4trace:configure.ac:131: -1- m4_pattern_allow([^ATOMIC_ALWAYS_LOCK_FREE_1B$])
m4trace:configure.ac:132: -1- OVS_CHECK_ATOMIC_ALWAYS_LOCK_FREE([2])
m4trace:configure.ac:132: -1- AC_COMPUTE_INT([ovs_cv_atomic_always_lock_free_2], [__atomic_always_lock_free(2, 0)], [], [ovs_cv_atomic_always_lock_free_2=unsupported])
m4trace:configure.ac:132: -1- m4_pattern_allow([^ATOMIC_ALWAYS_LOCK_FREE_2B$])
m4trace:configure.ac:133: -1- OVS_CHECK_ATOMIC_ALWAYS_LOCK_FREE([4])
m4trace:configure.ac:133: -1- AC_COMPUTE_INT([ovs_cv_atomic_always_lock_free_4], [__atomic_always_lock_free(4, 0)], [], [ovs_cv_atomic_always_lock_free_4=unsupported])
m4trace:configure.ac:133: -1- m4_pattern_allow([^ATOMIC_ALWAYS_LOCK_FREE_4B$])
m4trace:configure.ac:134: -1- OVS_CHECK_ATOMIC_ALWAYS_LOCK_FREE([8])
m4trace:configure.ac:134: -1- AC_COMPUTE_INT([ovs_cv_atomic_always_lock_free_8], [__atomic_always_lock_free(8, 0)], [], [ovs_cv_atomic_always_lock_free_8=unsupported])
m4trace:configure.ac:134: -1- m4_pattern_allow([^ATOMIC_ALWAYS_LOCK_FREE_8B$])
m4trace:configure.ac:135: -1- OVS_CHECK_POSIX_AIO
m4trace:configure.ac:135: -1- AM_CONDITIONAL([HAVE_POSIX_AIO], [test "$ac_cv_search_aio_write" != no])
m4trace:configure.ac:135: -1- m4_pattern_allow([^HAVE_POSIX_AIO_TRUE$])
m4trace:configure.ac:135: -1- m4_pattern_allow([^HAVE_POSIX_AIO_FALSE$])
m4trace:configure.ac:135: -1- _AM_SUBST_NOTMAKE([HAVE_POSIX_AIO_TRUE])
m4trace:configure.ac:135: -1- _AM_SUBST_NOTMAKE([HAVE_POSIX_AIO_FALSE])
m4trace:configure.ac:136: -1- OVS_CHECK_PTHREAD_SET_NAME
m4trace:configure.ac:136: -1- m4_pattern_allow([^HAVE_PTHREAD_SET_NAME_NP$])
m4trace:configure.ac:136: -1- m4_pattern_allow([^HAVE_GLIBC_PTHREAD_SETNAME_NP$])
m4trace:configure.ac:136: -1- m4_pattern_allow([^HAVE_NETBSD_PTHREAD_SETNAME_NP$])
m4trace:configure.ac:137: -1- OVS_CHECK_LINUX_HOST
m4trace:configure.ac:137: -1- AM_CONDITIONAL([LINUX], [$ovs_cv_linux])
m4trace:configure.ac:137: -1- m4_pattern_allow([^LINUX_TRUE$])
m4trace:configure.ac:137: -1- m4_pattern_allow([^LINUX_FALSE$])
m4trace:configure.ac:137: -1- _AM_SUBST_NOTMAKE([LINUX_TRUE])
m4trace:configure.ac:137: -1- _AM_SUBST_NOTMAKE([LINUX_FALSE])
m4trace:configure.ac:138: -1- OVS_LIBTOOL_VERSIONS
m4trace:configure.ac:138: -1- m4_pattern_allow([^OVS_LTINFO$])
m4trace:configure.ac:139: -1- OVS_CHECK_CXX
m4trace:configure.ac:139: -1- OVS_ENABLE_WERROR
m4trace:configure.ac:139: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
acinclude.m4:18: OVS_ENABLE_WERROR is expanded from...
m4/openvswitch.m4:685: OVS_CHECK_CXX is expanded from...
configure.ac:139: the top level])
m4trace:configure.ac:139: -1- m4_pattern_allow([^FLAKE8_WERROR$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^SPARSE_WERROR$])
m4trace:configure.ac:139: -1- AX_CXX_COMPILE_STDCXX([11], [], [optional])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_CXX11$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_ATOMIC$])
m4trace:configure.ac:139: -1- AM_CONDITIONAL([HAVE_CXX], [$enable_cxx])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_CXX_TRUE$])
m4trace:configure.ac:139: -1- m4_pattern_allow([^HAVE_CXX_FALSE$])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([HAVE_CXX_TRUE])
m4trace:configure.ac:139: -1- _AM_SUBST_NOTMAKE([HAVE_CXX_FALSE])
m4trace:configure.ac:140: -1- AX_FUNC_POSIX_MEMALIGN
m4trace:configure.ac:140: -1- _m4_warn([obsolete], [The macro `AC_TRY_RUN' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2775: AC_TRY_RUN is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/ax_func_posix_memalign.m4:27: AX_FUNC_POSIX_MEMALIGN is expanded from...
configure.ac:140: the top level])
m4trace:configure.ac:140: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:141: -1- OVS_CHECK_UNBOUND
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_UNBOUND$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([HAVE_UNBOUND], [test "$HAVE_UNBOUND" = yes])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_UNBOUND_TRUE$])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_UNBOUND_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([HAVE_UNBOUND_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([HAVE_UNBOUND_FALSE])
m4trace:configure.ac:141: -1- m4_pattern_allow([^HAVE_UNBOUND$])
m4trace:configure.ac:143: -1- OVS_CHECK_INCLUDE_NEXT([stdio.h string.h])
m4trace:configure.ac:143: -1- gl_CHECK_NEXT_HEADERS
m4trace:configure.ac:143: -1- gl_NEXT_HEADERS_INTERNAL([], [check])
m4trace:configure.ac:143: -1- gl_INCLUDE_NEXT
m4trace:configure.ac:143: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:143: -1- gl_CHECK_NEXT_HEADERS([stdio.h string.h])
m4trace:configure.ac:143: -1- gl_NEXT_HEADERS_INTERNAL([stdio.h string.h], [check])
m4trace:configure.ac:143: -1- AC_DEFUN([_AC_Header_stdio_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:143: -1- AC_DEFUN([_AC_Header_string_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" string.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:143: -1- gl_ABSOLUTE_HEADER_ONE([stdio.h])
m4trace:configure.ac:143: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:143: -1- gl_ABSOLUTE_HEADER_ONE([string.h])
m4trace:configure.ac:143: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:154: -1- OVS_ENABLE_OPTION([-Wall])
m4trace:configure.ac:154: -1- OVS_CHECK_CC_OPTION([-Wall], [WARNING_FLAGS="$WARNING_FLAGS -Wall"])
m4trace:configure.ac:154: -1- OVS_CHECK_WERROR
m4trace:configure.ac:154: -1- _OVS_CHECK_CC_OPTION([-Werror], [WERROR=-Werror])
m4trace:configure.ac:154: -1- _OVS_CHECK_CC_OPTION([-Wall], [WARNING_FLAGS="$WARNING_FLAGS -Wall"], [])
m4trace:configure.ac:154: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:155: -1- OVS_ENABLE_OPTION([-Wextra])
m4trace:configure.ac:155: -1- OVS_CHECK_CC_OPTION([-Wextra], [WARNING_FLAGS="$WARNING_FLAGS -Wextra"])
m4trace:configure.ac:155: -1- _OVS_CHECK_CC_OPTION([-Wextra], [WARNING_FLAGS="$WARNING_FLAGS -Wextra"], [])
m4trace:configure.ac:155: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:156: -1- OVS_ENABLE_OPTION([-Wno-sign-compare])
m4trace:configure.ac:156: -1- OVS_CHECK_CC_OPTION([-Wno-sign-compare], [WARNING_FLAGS="$WARNING_FLAGS -Wno-sign-compare"])
m4trace:configure.ac:156: -1- _OVS_CHECK_CC_OPTION([-Wno-sign-compare], [WARNING_FLAGS="$WARNING_FLAGS -Wno-sign-compare"], [])
m4trace:configure.ac:156: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:157: -1- OVS_ENABLE_OPTION([-Wpointer-arith])
m4trace:configure.ac:157: -1- OVS_CHECK_CC_OPTION([-Wpointer-arith], [WARNING_FLAGS="$WARNING_FLAGS -Wpointer-arith"])
m4trace:configure.ac:157: -1- _OVS_CHECK_CC_OPTION([-Wpointer-arith], [WARNING_FLAGS="$WARNING_FLAGS -Wpointer-arith"], [])
m4trace:configure.ac:157: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:158: -1- OVS_ENABLE_OPTION([-Wformat -Wformat-security])
m4trace:configure.ac:158: -1- OVS_CHECK_CC_OPTION([-Wformat -Wformat-security], [WARNING_FLAGS="$WARNING_FLAGS -Wformat -Wformat-security"])
m4trace:configure.ac:158: -1- _OVS_CHECK_CC_OPTION([-Wformat -Wformat-security], [WARNING_FLAGS="$WARNING_FLAGS -Wformat -Wformat-security"], [])
m4trace:configure.ac:158: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:159: -1- OVS_ENABLE_OPTION([-Wswitch-enum])
m4trace:configure.ac:159: -1- OVS_CHECK_CC_OPTION([-Wswitch-enum], [WARNING_FLAGS="$WARNING_FLAGS -Wswitch-enum"])
m4trace:configure.ac:159: -1- _OVS_CHECK_CC_OPTION([-Wswitch-enum], [WARNING_FLAGS="$WARNING_FLAGS -Wswitch-enum"], [])
m4trace:configure.ac:159: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:160: -1- OVS_ENABLE_OPTION([-Wunused-parameter])
m4trace:configure.ac:160: -1- OVS_CHECK_CC_OPTION([-Wunused-parameter], [WARNING_FLAGS="$WARNING_FLAGS -Wunused-parameter"])
m4trace:configure.ac:160: -1- _OVS_CHECK_CC_OPTION([-Wunused-parameter], [WARNING_FLAGS="$WARNING_FLAGS -Wunused-parameter"], [])
m4trace:configure.ac:160: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:161: -1- OVS_ENABLE_OPTION([-Wbad-function-cast])
m4trace:configure.ac:161: -1- OVS_CHECK_CC_OPTION([-Wbad-function-cast], [WARNING_FLAGS="$WARNING_FLAGS -Wbad-function-cast"])
m4trace:configure.ac:161: -1- _OVS_CHECK_CC_OPTION([-Wbad-function-cast], [WARNING_FLAGS="$WARNING_FLAGS -Wbad-function-cast"], [])
m4trace:configure.ac:161: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:162: -1- OVS_ENABLE_OPTION([-Wcast-align])
m4trace:configure.ac:162: -1- OVS_CHECK_CC_OPTION([-Wcast-align], [WARNING_FLAGS="$WARNING_FLAGS -Wcast-align"])
m4trace:configure.ac:162: -1- _OVS_CHECK_CC_OPTION([-Wcast-align], [WARNING_FLAGS="$WARNING_FLAGS -Wcast-align"], [])
m4trace:configure.ac:162: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:163: -1- OVS_ENABLE_OPTION([-Wstrict-prototypes])
m4trace:configure.ac:163: -1- OVS_CHECK_CC_OPTION([-Wstrict-prototypes], [WARNING_FLAGS="$WARNING_FLAGS -Wstrict-prototypes"])
m4trace:configure.ac:163: -1- _OVS_CHECK_CC_OPTION([-Wstrict-prototypes], [WARNING_FLAGS="$WARNING_FLAGS -Wstrict-prototypes"], [])
m4trace:configure.ac:163: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:164: -1- OVS_ENABLE_OPTION([-Wold-style-definition])
m4trace:configure.ac:164: -1- OVS_CHECK_CC_OPTION([-Wold-style-definition], [WARNING_FLAGS="$WARNING_FLAGS -Wold-style-definition"])
m4trace:configure.ac:164: -1- _OVS_CHECK_CC_OPTION([-Wold-style-definition], [WARNING_FLAGS="$WARNING_FLAGS -Wold-style-definition"], [])
m4trace:configure.ac:164: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:165: -1- OVS_ENABLE_OPTION([-Wmissing-prototypes])
m4trace:configure.ac:165: -1- OVS_CHECK_CC_OPTION([-Wmissing-prototypes], [WARNING_FLAGS="$WARNING_FLAGS -Wmissing-prototypes"])
m4trace:configure.ac:165: -1- _OVS_CHECK_CC_OPTION([-Wmissing-prototypes], [WARNING_FLAGS="$WARNING_FLAGS -Wmissing-prototypes"], [])
m4trace:configure.ac:165: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:166: -1- OVS_ENABLE_OPTION([-Wmissing-field-initializers])
m4trace:configure.ac:166: -1- OVS_CHECK_CC_OPTION([-Wmissing-field-initializers], [WARNING_FLAGS="$WARNING_FLAGS -Wmissing-field-initializers"])
m4trace:configure.ac:166: -1- _OVS_CHECK_CC_OPTION([-Wmissing-field-initializers], [WARNING_FLAGS="$WARNING_FLAGS -Wmissing-field-initializers"], [])
m4trace:configure.ac:166: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:167: -1- OVS_ENABLE_OPTION([-Wthread-safety])
m4trace:configure.ac:167: -1- OVS_CHECK_CC_OPTION([-Wthread-safety], [WARNING_FLAGS="$WARNING_FLAGS -Wthread-safety"])
m4trace:configure.ac:167: -1- _OVS_CHECK_CC_OPTION([-Wthread-safety], [WARNING_FLAGS="$WARNING_FLAGS -Wthread-safety"], [])
m4trace:configure.ac:167: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:168: -1- OVS_ENABLE_OPTION([-fno-strict-aliasing])
m4trace:configure.ac:168: -1- OVS_CHECK_CC_OPTION([-fno-strict-aliasing], [WARNING_FLAGS="$WARNING_FLAGS -fno-strict-aliasing"])
m4trace:configure.ac:168: -1- _OVS_CHECK_CC_OPTION([-fno-strict-aliasing], [WARNING_FLAGS="$WARNING_FLAGS -fno-strict-aliasing"], [])
m4trace:configure.ac:168: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:169: -1- OVS_ENABLE_OPTION([-Wswitch-bool])
m4trace:configure.ac:169: -1- OVS_CHECK_CC_OPTION([-Wswitch-bool], [WARNING_FLAGS="$WARNING_FLAGS -Wswitch-bool"])
m4trace:configure.ac:169: -1- _OVS_CHECK_CC_OPTION([-Wswitch-bool], [WARNING_FLAGS="$WARNING_FLAGS -Wswitch-bool"], [])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:170: -1- OVS_ENABLE_OPTION([-Wlogical-not-parentheses])
m4trace:configure.ac:170: -1- OVS_CHECK_CC_OPTION([-Wlogical-not-parentheses], [WARNING_FLAGS="$WARNING_FLAGS -Wlogical-not-parentheses"])
m4trace:configure.ac:170: -1- _OVS_CHECK_CC_OPTION([-Wlogical-not-parentheses], [WARNING_FLAGS="$WARNING_FLAGS -Wlogical-not-parentheses"], [])
m4trace:configure.ac:170: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:171: -1- OVS_ENABLE_OPTION([-Wsizeof-array-argument])
m4trace:configure.ac:171: -1- OVS_CHECK_CC_OPTION([-Wsizeof-array-argument], [WARNING_FLAGS="$WARNING_FLAGS -Wsizeof-array-argument"])
m4trace:configure.ac:171: -1- _OVS_CHECK_CC_OPTION([-Wsizeof-array-argument], [WARNING_FLAGS="$WARNING_FLAGS -Wsizeof-array-argument"], [])
m4trace:configure.ac:171: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:172: -1- OVS_ENABLE_OPTION([-Wbool-compare])
m4trace:configure.ac:172: -1- OVS_CHECK_CC_OPTION([-Wbool-compare], [WARNING_FLAGS="$WARNING_FLAGS -Wbool-compare"])
m4trace:configure.ac:172: -1- _OVS_CHECK_CC_OPTION([-Wbool-compare], [WARNING_FLAGS="$WARNING_FLAGS -Wbool-compare"], [])
m4trace:configure.ac:172: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:173: -1- OVS_ENABLE_OPTION([-Wshift-negative-value])
m4trace:configure.ac:173: -1- OVS_CHECK_CC_OPTION([-Wshift-negative-value], [WARNING_FLAGS="$WARNING_FLAGS -Wshift-negative-value"])
m4trace:configure.ac:173: -1- _OVS_CHECK_CC_OPTION([-Wshift-negative-value], [WARNING_FLAGS="$WARNING_FLAGS -Wshift-negative-value"], [])
m4trace:configure.ac:173: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:174: -1- OVS_ENABLE_OPTION([-Wduplicated-cond])
m4trace:configure.ac:174: -1- OVS_CHECK_CC_OPTION([-Wduplicated-cond], [WARNING_FLAGS="$WARNING_FLAGS -Wduplicated-cond"])
m4trace:configure.ac:174: -1- _OVS_CHECK_CC_OPTION([-Wduplicated-cond], [WARNING_FLAGS="$WARNING_FLAGS -Wduplicated-cond"], [])
m4trace:configure.ac:174: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:175: -1- OVS_ENABLE_OPTION([-Qunused-arguments])
m4trace:configure.ac:175: -1- OVS_CHECK_CC_OPTION([-Qunused-arguments], [WARNING_FLAGS="$WARNING_FLAGS -Qunused-arguments"])
m4trace:configure.ac:175: -1- _OVS_CHECK_CC_OPTION([-Qunused-arguments], [WARNING_FLAGS="$WARNING_FLAGS -Qunused-arguments"], [])
m4trace:configure.ac:175: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:176: -1- OVS_ENABLE_OPTION([-Wshadow])
m4trace:configure.ac:176: -1- OVS_CHECK_CC_OPTION([-Wshadow], [WARNING_FLAGS="$WARNING_FLAGS -Wshadow"])
m4trace:configure.ac:176: -1- _OVS_CHECK_CC_OPTION([-Wshadow], [WARNING_FLAGS="$WARNING_FLAGS -Wshadow"], [])
m4trace:configure.ac:176: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:177: -1- OVS_ENABLE_OPTION([-Wmultistatement-macros])
m4trace:configure.ac:177: -1- OVS_CHECK_CC_OPTION([-Wmultistatement-macros], [WARNING_FLAGS="$WARNING_FLAGS -Wmultistatement-macros"])
m4trace:configure.ac:177: -1- _OVS_CHECK_CC_OPTION([-Wmultistatement-macros], [WARNING_FLAGS="$WARNING_FLAGS -Wmultistatement-macros"], [])
m4trace:configure.ac:177: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:178: -1- OVS_ENABLE_OPTION([-Wcast-align=strict])
m4trace:configure.ac:178: -1- OVS_CHECK_CC_OPTION([-Wcast-align=strict], [WARNING_FLAGS="$WARNING_FLAGS -Wcast-align=strict"])
m4trace:configure.ac:178: -1- _OVS_CHECK_CC_OPTION([-Wcast-align=strict], [WARNING_FLAGS="$WARNING_FLAGS -Wcast-align=strict"], [])
m4trace:configure.ac:178: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:179: -1- OVS_ENABLE_OPTION([-Wno-null-pointer-arithmetic])
m4trace:configure.ac:179: -1- OVS_CHECK_CC_OPTION([-Wno-null-pointer-arithmetic], [WARNING_FLAGS="$WARNING_FLAGS -Wno-null-pointer-arithmetic"])
m4trace:configure.ac:179: -1- _OVS_CHECK_CC_OPTION([-Wno-null-pointer-arithmetic], [WARNING_FLAGS="$WARNING_FLAGS -Wno-null-pointer-arithmetic"], [])
m4trace:configure.ac:179: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:180: -1- OVS_ENABLE_OPTION([-Warray-bounds-pointer-arithmetic])
m4trace:configure.ac:180: -1- OVS_CHECK_CC_OPTION([-Warray-bounds-pointer-arithmetic], [WARNING_FLAGS="$WARNING_FLAGS -Warray-bounds-pointer-arithmetic"])
m4trace:configure.ac:180: -1- _OVS_CHECK_CC_OPTION([-Warray-bounds-pointer-arithmetic], [WARNING_FLAGS="$WARNING_FLAGS -Warray-bounds-pointer-arithmetic"], [])
m4trace:configure.ac:180: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:181: -1- OVS_CONDITIONAL_CC_OPTION([-Wno-unused], [HAVE_WNO_UNUSED])
m4trace:configure.ac:181: -1- OVS_CHECK_CC_OPTION([-Wno-unused], [ovs_have_cc_option=yes], [ovs_have_cc_option=no])
m4trace:configure.ac:181: -1- _OVS_CHECK_CC_OPTION([-Wno-unused], [ovs_have_cc_option=yes], [ovs_have_cc_option=no])
m4trace:configure.ac:181: -1- AM_CONDITIONAL([HAVE_WNO_UNUSED], [test $ovs_have_cc_option = yes])
m4trace:configure.ac:181: -1- m4_pattern_allow([^HAVE_WNO_UNUSED_TRUE$])
m4trace:configure.ac:181: -1- m4_pattern_allow([^HAVE_WNO_UNUSED_FALSE$])
m4trace:configure.ac:181: -1- _AM_SUBST_NOTMAKE([HAVE_WNO_UNUSED_TRUE])
m4trace:configure.ac:181: -1- _AM_SUBST_NOTMAKE([HAVE_WNO_UNUSED_FALSE])
m4trace:configure.ac:182: -1- OVS_CONDITIONAL_CC_OPTION([-Wno-unused-parameter], [HAVE_WNO_UNUSED_PARAMETER])
m4trace:configure.ac:182: -1- OVS_CHECK_CC_OPTION([-Wno-unused-parameter], [ovs_have_cc_option=yes], [ovs_have_cc_option=no])
m4trace:configure.ac:182: -1- _OVS_CHECK_CC_OPTION([-Wno-unused-parameter], [ovs_have_cc_option=yes], [ovs_have_cc_option=no])
m4trace:configure.ac:182: -1- AM_CONDITIONAL([HAVE_WNO_UNUSED_PARAMETER], [test $ovs_have_cc_option = yes])
m4trace:configure.ac:182: -1- m4_pattern_allow([^HAVE_WNO_UNUSED_PARAMETER_TRUE$])
m4trace:configure.ac:182: -1- m4_pattern_allow([^HAVE_WNO_UNUSED_PARAMETER_FALSE$])
m4trace:configure.ac:182: -1- _AM_SUBST_NOTMAKE([HAVE_WNO_UNUSED_PARAMETER_TRUE])
m4trace:configure.ac:182: -1- _AM_SUBST_NOTMAKE([HAVE_WNO_UNUSED_PARAMETER_FALSE])
m4trace:configure.ac:183: -1- OVS_ENABLE_WERROR
m4trace:configure.ac:183: -1- m4_pattern_allow([^FLAKE8_WERROR$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^SPARSE_WERROR$])
m4trace:configure.ac:184: -1- OVS_ENABLE_SPARSE
m4trace:configure.ac:184: -1- OVS_CHECK_SPARSE_TARGET
m4trace:configure.ac:184: -1- m4_pattern_allow([^SPARSEFLAGS$])
m4trace:configure.ac:184: -1- m4_pattern_allow([^CGCCFLAGS$])
m4trace:configure.ac:184: -1- OVS_SPARSE_EXTRA_INCLUDES
m4trace:configure.ac:184: -1- m4_pattern_allow([^SPARSE$])
m4trace:configure.ac:184: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1473: AC_ARG_ENABLE is expanded from...
acinclude.m4:1228: OVS_ENABLE_SPARSE is expanded from...
configure.ac:184: the top level])
m4trace:configure.ac:184: -1- AM_CONDITIONAL([ENABLE_SPARSE_BY_DEFAULT], [test $enable_sparse = yes])
m4trace:configure.ac:184: -1- m4_pattern_allow([^ENABLE_SPARSE_BY_DEFAULT_TRUE$])
m4trace:configure.ac:184: -1- m4_pattern_allow([^ENABLE_SPARSE_BY_DEFAULT_FALSE$])
m4trace:configure.ac:184: -1- _AM_SUBST_NOTMAKE([ENABLE_SPARSE_BY_DEFAULT_TRUE])
m4trace:configure.ac:184: -1- _AM_SUBST_NOTMAKE([ENABLE_SPARSE_BY_DEFAULT_FALSE])
m4trace:configure.ac:185: -1- OVS_CTAGS_IDENTIFIERS
m4trace:configure.ac:187: -1- m4_pattern_allow([^KARCH$])
m4trace:configure.ac:188: -1- m4_pattern_allow([^KARCH$])
m4trace:configure.ac:189: -1- OVS_CHECK_LINUX
m4trace:configure.ac:189: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1492: AC_ARG_WITH is expanded from...
acinclude.m4:48: OVS_CHECK_LINUX is expanded from...
configure.ac:189: the top level])
m4trace:configure.ac:189: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1492: AC_ARG_WITH is expanded from...
acinclude.m4:48: OVS_CHECK_LINUX is expanded from...
configure.ac:189: the top level])
m4trace:configure.ac:189: -1- m4_pattern_allow([^KBUILD$])
m4trace:configure.ac:189: -1- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
acinclude.m4:48: OVS_CHECK_LINUX is expanded from...
configure.ac:189: the top level])
m4trace:configure.ac:189: -1- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
acinclude.m4:48: OVS_CHECK_LINUX is expanded from...
configure.ac:189: the top level])
m4trace:configure.ac:189: -1- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
acinclude.m4:48: OVS_CHECK_LINUX is expanded from...
configure.ac:189: the top level])
m4trace:configure.ac:189: -1- _m4_warn([obsolete], [The macro `AC_ERROR' is obsolete.
You should run autoupdate.], [../../lib/autoconf/oldnames.m4:34: AC_ERROR is expanded from...
acinclude.m4:48: OVS_CHECK_LINUX is expanded from...
configure.ac:189: the top level])
m4trace:configure.ac:189: -1- OVS_CHECK_LINUX_COMPAT
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/arch/x86/include/asm/checksum_32.h], [src_err,], [OVS_DEFINE([HAVE_CSUM_COPY_DBG])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CSUM_COPY_DBG])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip6_fib.h], [rt6_get_cookie], [OVS_DEFINE([HAVE_RT6_GET_COOKIE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RT6_GET_COOKIE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/addrconf.h], [ipv6_dst_lookup.*net], [OVS_DEFINE([HAVE_IPV6_DST_LOOKUP_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IPV6_DST_LOOKUP_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/addrconf.h], [ipv6_stub])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IPV6_STUB])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/err.h], [ERR_CAST])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_ERR_CAST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/err.h], [IS_ERR_OR_NULL])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IS_ERR_OR_NULL])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/err.h], [PTR_ERR_OR_ZERO])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PTR_ERR_OR_ZERO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/jump_label.h], [static_branch_unlikely(], [OVS_DEFINE([HAVE_UPSTREAM_STATIC_KEY])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UPSTREAM_STATIC_KEY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/jump_label.h], [DEFINE_STATIC_KEY_FALSE], [OVS_DEFINE([HAVE_DEFINE_STATIC_KEY])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEFINE_STATIC_KEY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/etherdevice.h], [eth_hw_addr_random])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_ETH_HW_ADDR_RANDOM])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/etherdevice.h], [ether_addr_copy])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_ETHER_ADDR_COPY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_link.h], [IFLA_GENEVE_TOS])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GENEVE_TOS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_link.h], [rtnl_link_stats64])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RTNL_LINK_STATS64])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_link.h], [rtnl_link_stats64])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RTNL_LINK_STATS64])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_set_encap_proto])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VLAN_SET_ENCAP_PROTO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_hwaccel_push_inside])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VLAN_HWACCEL_PUSH_INSIDE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [__vlan_hwaccel_clear_tag])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___VLAN_HWACCEL_CLEAR_TAG])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/in.h], [ipv4_is_multicast])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IPV4_IS_MULTICAST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/in.h], [proto_ports_offset])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PROTO_PORTS_OFFSET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [__ip_select_ident.*dst_entry], [OVS_DEFINE([HAVE_IP_SELECT_IDENT_USING_DST_ENTRY])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_SELECT_IDENT_USING_DST_ENTRY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [__ip_select_ident.*net], [OVS_DEFINE([HAVE_IP_SELECT_IDENT_USING_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_SELECT_IDENT_USING_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [inet_get_local_port_range.*net], [OVS_DEFINE([HAVE_INET_GET_LOCAL_PORT_RANGE_USING_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_GET_LOCAL_PORT_RANGE_USING_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [ip_defrag.*net], [OVS_DEFINE([HAVE_IP_DEFRAG_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_DEFRAG_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ip.h], [ip_do_fragment], [net], [OVS_DEFINE([HAVE_IP_DO_FRAGMENT_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_DO_FRAGMENT_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ip.h], [ip_local_out], [net], [OVS_DEFINE([HAVE_IP_LOCAL_OUT_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_LOCAL_OUT_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [ip_skb_dst_mtu])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_SKB_DST_MTU])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip.h], [IPSKB_FRAG_PMTU], [OVS_DEFINE([HAVE_CORRECT_MRU_HANDLING])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CORRECT_MRU_HANDLING])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip_tunnels.h], [__ip_tunnel_change_mtu])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___IP_TUNNEL_CHANGE_MTU])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [hashfn.*const], [OVS_DEFINE([HAVE_INET_FRAGS_CONST])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAGS_CONST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [last_in], [OVS_DEFINE([HAVE_INET_FRAGS_LAST_IN])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAGS_LAST_IN])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_evicting])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAG_EVICTING])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_evictor])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAG_EVICTOR])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frags], [frags_work])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAGS_WITH_FRAGS_WORK])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frags], [rwlock])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAGS_WITH_RWLOCK])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_queue], [list_evictor])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAG_QUEUE_WITH_LIST_EVICTOR])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frag_lru_move])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAG_LRU_MOVE])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/inet_frag.h], [sub_frag_mem_limit], [struct.netns_frags], [OVS_DEFINE([HAVE_SUB_FRAG_MEM_LIMIT_ARG_STRUCT_NETNS_FRAGS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SUB_FRAG_MEM_LIMIT_ARG_STRUCT_NETNS_FRAGS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [void.*inet_frags_init], [OVS_DEFINE([HAVE_VOID_INET_FRAGS_INIT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VOID_INET_FRAGS_INIT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inetpeer.h], [vif], [OVS_DEFINE([HAVE_INETPEER_VIF_SUPPORT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INETPEER_VIF_SUPPORT])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/ip_tunnels.h], [ip_tunnel_key], [label], [OVS_GREP_IFELSE([$KSRC/include/net/ip_tunnels.h],
                                         [iptunnel_pull_offloads],
                        [OVS_GREP_IFELSE([$KSRC/include/net/dst_cache.h], [dst_cache],
                        [OVS_GREP_IFELSE([$KSRC/include/net/erspan.h], [erspan_md2],
                                         [OVS_DEFINE([USE_UPSTREAM_TUNNEL])])])])])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip_tunnels.h], [iptunnel_pull_offloads], [OVS_GREP_IFELSE([$KSRC/include/net/dst_cache.h], [dst_cache],
                        [OVS_GREP_IFELSE([$KSRC/include/net/erspan.h], [erspan_md2],
                                         [OVS_DEFINE([USE_UPSTREAM_TUNNEL])])])])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/dst_cache.h], [dst_cache], [OVS_GREP_IFELSE([$KSRC/include/net/erspan.h], [erspan_md2],
                                         [OVS_DEFINE([USE_UPSTREAM_TUNNEL])])])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/erspan.h], [erspan_md2], [OVS_DEFINE([USE_UPSTREAM_TUNNEL])])
m4trace:configure.ac:189: -1- OVS_DEFINE([USE_UPSTREAM_TUNNEL])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/dst_cache.h], [dst_cache], [OVS_DEFINE([USE_BUILTIN_DST_CACHE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([USE_BUILTIN_DST_CACHE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/mpls.h], [mpls_hdr], [OVS_DEFINE([MPLS_HEADER_IS_L3])])
m4trace:configure.ac:189: -1- OVS_DEFINE([MPLS_HEADER_IS_L3])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/net.h], [sock_create_kern.*net], [OVS_DEFINE([HAVE_SOCK_CREATE_KERN_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SOCK_CREATE_KERN_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_fill_metadata_dst])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NDO_FILL_METADATA_DST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_disable_lro])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEV_DISABLE_LRO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_get_stats])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEV_GET_STATS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_get_by_index_rcu])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEV_GET_BY_INDEX_RCU])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [dev_recursion_level])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEV_RECURSION_LEVEL])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [__skb_gso_segment])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___SKB_GSO_SEGMENT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [skb_gso_error_unwind])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_GSO_ERROR_UNWIND])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [can_checksum_protocol])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CAN_CHECKSUM_PROTOCOL])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_get_iflink])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NDO_GET_IFLINK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_features_check], [OVS_DEFINE([USE_UPSTREAM_TUNNEL_GSO])])
m4trace:configure.ac:189: -1- OVS_DEFINE([USE_UPSTREAM_TUNNEL_GSO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_add_vxlan_port])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NDO_ADD_VXLAN_PORT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_add_geneve_port])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NDO_ADD_GENEVE_PORT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [ndo_udp_tunnel_add])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NDO_UDP_TUNNEL_ADD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [netdev_features_t])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETDEV_FEATURES_T])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [pcpu_sw_netstats.*tstats], [OVS_DEFINE([HAVE_PCPU_SW_NETSTATS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PCPU_SW_NETSTATS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [netif_needs_gso.*net_device], [OVS_DEFINE([HAVE_NETIF_NEEDS_GSO_NETDEV])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETIF_NEEDS_GSO_NETDEV])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [skb_csum_hwoffload_help])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_CSUM_HWOFFLOAD_HELP])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [udp_offload])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_OFFLOAD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [udp_offload.*uoff], [OVS_DEFINE([HAVE_UDP_OFFLOAD_ARG_UOFF])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_OFFLOAD_ARG_UOFF])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [gro_remcsum])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GRO_REMCSUM])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [IFF_PHONY_HEADROOM])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFF_PHONY_HEADROOM])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device_ops], [extended])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NET_DEVICE_OPS_WITH_EXTENDED])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netdevice.h], [netdev_master_upper_dev_link], [upper_priv], [OVS_DEFINE([HAVE_NETDEV_MASTER_UPPER_DEV_LINK_PRIV])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETDEV_MASTER_UPPER_DEV_LINK_PRIV])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [netdev_master_upper_dev_link_rh], [OVS_DEFINE([HAVE_NETDEV_MASTER_UPPER_DEV_LINK_RH])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETDEV_MASTER_UPPER_DEV_LINK_RH])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device], [max_mtu])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NET_DEVICE_WITH_MAX_MTU])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device_ops_extended], [ndo_change_mtu], [OVS_DEFINE([HAVE_RHEL7_MAX_MTU])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RHEL7_MAX_MTU])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netdevice.h], [dev_change_flags], [extack], [OVS_DEFINE([HAVE_DEV_CHANGE_FLAGS_TAKES_EXTACK])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEV_CHANGE_FLAGS_TAKES_EXTACK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_state])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_HOOK_STATE])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_state], [struct net ], [OVS_DEFINE([HAVE_NF_HOOK_STATE_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_HOOK_STATE_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [nf_register_net_hook])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_REGISTER_NET_HOOK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hookfn.*nf_hook_ops], [OVS_DEFINE([HAVE_NF_HOOKFN_ARG_OPS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_HOOKFN_ARG_OPS])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hookfn], [priv], [OVS_DEFINE([HAVE_NF_HOOKFN_ARG_PRIV])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_HOOKFN_ARG_PRIV])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_ops], [owner], [OVS_DEFINE([HAVE_NF_HOOKS_OPS_OWNER])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_HOOKS_OPS_OWNER])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netfilter.h], [NFPROTO_INET])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NFPROTO_INET])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter_ipv6.h], [nf_ipv6_ops], [fragment.*sock], [OVS_DEFINE([HAVE_NF_IPV6_OPS_FRAGMENT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_IPV6_OPS_FRAGMENT])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h], [nf_conn], [struct timer_list[[ \t]]*timeout], [OVS_DEFINE([HAVE_NF_CONN_TIMER])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONN_TIMER])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h], [nf_ct_delete(], [OVS_DEFINE([HAVE_NF_CT_DELETE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_DELETE])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h], [nf_ct_tmpl_alloc], [nf_conntrack_zone], [OVS_DEFINE([HAVE_NF_CT_TMPL_ALLOC_TAKES_STRUCT_ZONE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_TMPL_ALLOC_TAKES_STRUCT_ZONE])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h], [nf_ct_get_tuplepr], [struct.net], [OVS_DEFINE([HAVE_NF_CT_GET_TUPLEPR_TAKES_STRUCT_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_GET_TUPLEPR_TAKES_STRUCT_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h], [nf_ct_set])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_SET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack.h], [nf_ct_is_untracked])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_IS_UNTRACKED])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_zones.h], [nf_ct_zone_init])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_ZONE_INIT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_l3proto.h], [net_ns_get])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NET_NS_GET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_labels.h], [nf_connlabels_get])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONNLABELS_GET])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_labels.h], [nf_connlabels_get], [int bit], [OVS_DEFINE([HAVE_NF_CONNLABELS_GET_TAKES_BIT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONNLABELS_GET_TAKES_BIT])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_labels.h], [nf_conn_labels], [words])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONN_LABELS_WITH_WORDS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_nat.h], [nf_ct_nat_ext_add])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_NAT_EXT_ADD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_nat.h], [nf_nat_alloc_null_binding])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_NAT_ALLOC_NULL_BINDING])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_nat.h], [nf_nat_range2])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_NAT_RANGE2])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_seqadj.h], [nf_ct_seq_adjust])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_SEQ_ADJUST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_count.h], [nf_conncount_gc_list], [OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_count.h],
                                   [int nf_conncount_add],
                                   [], [OVS_DEFINE([HAVE_UPSTREAM_NF_CONNCOUNT])])])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_count.h], [int nf_conncount_add], [], [OVS_DEFINE([HAVE_UPSTREAM_NF_CONNCOUNT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INT NF_CONNCOUNT_ADD])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UPSTREAM_NF_CONNCOUNT])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UPSTREAM_NF_CONNCOUNT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/random.h], [prandom_u32])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PRANDOM_U32])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/random.h], [prandom_u32_max])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PRANDOM_U32_MAX])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/rtnetlink.h], [get_link_net])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GET_LINK_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/rtnetlink.h], [name_assign_type])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NAME_ASSIGN_TYPE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/rtnetlink.h], [rtnl_create_link.*src_net], [OVS_DEFINE([HAVE_RTNL_CREATE_LINK_SRC_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RTNL_CREATE_LINK_SRC_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/net_namespace.h], [possible_net_t])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_POSSIBLE_NET_T])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/rcupdate.h], [rcu_read_lock_held], [], [OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h],
                                   [rcu_read_lock_held])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RCU_READ_LOCK_HELD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h], [rcu_read_lock_held])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RCU_READ_LOCK_HELD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h], [rcu_read_lock_held])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RCU_READ_LOCK_HELD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h], [lockdep_rtnl_is_held])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_LOCKDEP_RTNL_IS_HELD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/rtnetlink.h], [net_rwsem])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NET_RWSEM])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/rtnetlink.h], [rtnl_create_link], [extack], [OVS_DEFINE([HAVE_RTNL_CREATE_LINK_TAKES_EXTACK])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RTNL_CREATE_LINK_TAKES_EXTACK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [[[^@]]proto_data_valid], [OVS_DEFINE([HAVE_PROTO_DATA_VALID])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PROTO_DATA_VALID])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_checksum_start_offset])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_CHECKSUM_START_OFFSET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [inner_protocol])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INNER_PROTOCOL])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [inner_protocol_type])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INNER_PROTOCOL_TYPE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_inner_transport_offset])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_INNER_TRANSPORT_OFFSET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [kfree_skb_list])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_KFREE_SKB_LIST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [rxhash])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RXHASH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [u16.*rxhash], [OVS_DEFINE([HAVE_U16_RXHASH])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_U16_RXHASH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_dst(], [OVS_DEFINE([HAVE_SKB_DST_ACCESSOR_FUNCS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_DST_ACCESSOR_FUNCS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_copy_from_linear_data_offset])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_COPY_FROM_LINEAR_DATA_OFFSET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_reset_tail_pointer])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_RESET_TAIL_POINTER])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_cow_head])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_COW_HEAD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_warn_if_lro], [OVS_DEFINE([HAVE_SKB_WARN_LRO])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_WARN_LRO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [consume_skb])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CONSUME_SKB])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_frag_page])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_FRAG_PAGE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_has_frag_list])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_HAS_FRAG_LIST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [__skb_fill_page_desc])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___SKB_FILL_PAGE_DESC])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_reset_mac_len])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_RESET_MAC_LEN])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_unclone])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_UNCLONE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_orphan_frags])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_ORPHAN_FRAGS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_get_hash(], [OVS_DEFINE([HAVE_SKB_GET_HASH])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_GET_HASH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_clear_hash])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_CLEAR_HASH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [int.skb_zerocopy(], [OVS_DEFINE([HAVE_SKB_ZEROCOPY])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_ZEROCOPY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [u8.*l4_rxhash], [OVS_DEFINE([HAVE_L4_RXHASH])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_L4_RXHASH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_ensure_writable])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_ENSURE_WRITABLE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_vlan_pop])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_VLAN_POP])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [__skb_vlan_pop])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___SKB_VLAN_POP])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_vlan_push])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_VLAN_PUSH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_clear_hash_if_not_l4])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_CLEAR_HASH_IF_NOT_L4])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_postpush_rcsum])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_POSTPUSH_RCSUM])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [lco_csum])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_LCO_CSUM])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_nfct])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_NFCT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_put_zero])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_PUT_ZERO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/types.h], [bool], [OVS_DEFINE([HAVE_BOOL_TYPE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_BOOL_TYPE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/types.h], [__wsum], [OVS_DEFINE([HAVE_CSUM_TYPES])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CSUM_TYPES])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/types.h], [__wsum], [OVS_DEFINE([HAVE_CSUM_TYPES])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CSUM_TYPES])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/checksum.h], [csum_replace4])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CSUM_REPLACE4])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/checksum.h], [csum_unfold])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_CSUM_UNFOLD])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/dst.h], [dst_discard_sk])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DST_DISCARD_SK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/dst.h], [__skb_dst_copy])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___SKB_DST_COPY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [genl_has_listeners])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENL_HAS_LISTENERS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [mcgrp_offset])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_MCGRP_OFFSET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [parallel_ops])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PARALLEL_OPS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [netlink_has_listeners(net->genl_sock], [OVS_DEFINE([HAVE_GENL_HAS_LISTENERS_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENL_HAS_LISTENERS_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [genlmsg_parse])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENLMSG_PARSE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [genl_notify.*family], [OVS_DEFINE([HAVE_GENL_NOTIFY_TAKES_FAMILY])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENL_NOTIFY_TAKES_FAMILY])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/genetlink.h], [genl_notify], [net], [OVS_DEFINE([HAVE_GENL_NOTIFY_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENL_NOTIFY_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/genetlink.h], [genl_multicast_group], [id])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENL_MULTICAST_GROUP_WITH_ID])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/geneve.h], [geneve_hdr])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENEVE_HDR])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [gre_cisco_register])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GRE_CISCO_REGISTER])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [gre_handle_offloads])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GRE_HANDLE_OFFLOADS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ipv6.h], [IP6_FH_F_SKIP_RH])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP6_FH_F_SKIP_RH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ipv6.h], [ip6_local_out_sk])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP6_LOCAL_OUT_SK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ipv6.h], [__ipv6_addr_jhash])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___IPV6_ADDR_JHASH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip6_fib.h], [rt6i.*u.dst], [OVS_DEFINE([HAVE_RT6INFO_DST_UNION])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RT6INFO_DST_UNION])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ip6_route.h], [ip6_frag.*sock], [OVS_DEFINE([HAVE_IP_FRAGMENT_TAKES_SOCK])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_FRAGMENT_TAKES_SOCK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_64bit])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_PUT_64BIT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_get_be16])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_GET_BE16])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_be16])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_PUT_BE16])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_be32])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_PUT_BE32])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_be64])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_PUT_BE64])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_put_in_addr])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_PUT_IN_ADDR])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_find_nested])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_FIND_NESTED])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netlink.h], [nla_is_last])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NLA_IS_LAST])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netlink.h], [void.*netlink_set_err], [OVS_DEFINE([HAVE_VOID_NETLINK_SET_ERR])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VOID_NETLINK_SET_ERR])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netlink.h], [nla_parse], [netlink_ext_ack], [OVS_DEFINE([HAVE_NETLINK_EXT_ACK])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETLINK_EXT_ACK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/sctp/checksum.h], [sctp_compute_cksum])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SCTP_COMPUTE_CKSUM])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [ADD_ALL_VLANS_CMD], [OVS_DEFINE([HAVE_VLAN_BUG_WORKAROUND])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VLAN_BUG_WORKAROUND])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_insert_tag_set_proto])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VLAN_INSERT_TAG_SET_PROTO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [__vlan_insert_tag])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE___VLAN_INSERT_TAG])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [vlan_get_protocol])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VLAN_GET_PROTOCOL])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [skb_vlan_tagged])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_VLAN_TAGGED])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/if_vlan.h], [eth_type_vlan])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_ETH_TYPE_VLAN])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/dst_metadata.h], [metadata_dst_alloc], [metadata_type])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_METADATA_DST_ALLOC_WITH_METADATA_TYPE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/u64_stats_sync.h], [u64_stats_fetch_begin_irq])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_U64_STATS_FETCH_BEGIN_IRQ])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/vxlan.h], [struct vxlan_metadata], [OVS_DEFINE([HAVE_VXLAN_METADATA])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VXLAN_METADATA])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [udp_flow_src_port], [OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [inet_get_local_port_range(net],
                                   [OVS_DEFINE([HAVE_UDP_FLOW_SRC_PORT])])])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [inet_get_local_port_range(net], [OVS_DEFINE([HAVE_UDP_FLOW_SRC_PORT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_FLOW_SRC_PORT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/udp.h], [udp_v4_check])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_V4_CHECK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/udp_tunnel.h], [udp_tunnel_gro_complete])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_TUNNEL_GRO_COMPLETE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/udp_tunnel.h], [sk_buff.*udp_tunnel_handle_offloads], [OVS_DEFINE([HAVE_UDP_TUNNEL_HANDLE_OFFLOAD_RET_SKB])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_TUNNEL_HANDLE_OFFLOAD_RET_SKB])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/udp_tunnel.h], [udp_tunnel_sock_cfg], [gro_receive])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_TUNNEL_SOCK_CFG_WITH_GRO_RECEIVE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [ignore_df], [OVS_DEFINE([HAVE_IGNORE_DF_RENAME])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IGNORE_DF_RENAME])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/netdevice.h], [NET_NAME_UNKNOWN], [OVS_DEFINE([HAVE_NET_NAME_UNKNOWN])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NET_NAME_UNKNOWN])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/sock.h], [sk_no_check_tx])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SK_NO_CHECK_TX])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/udp.h], [no_check6_tx])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NO_CHECK6_TX])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/utsrelease.h], [el6], [OVS_DEFINE([HAVE_RHEL6_PER_CPU])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RHEL6_PER_CPU])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/protocol.h], [udp_add_offload], [net], [OVS_DEFINE([HAVE_UDP_ADD_OFFLOAD_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UDP_ADD_OFFLOAD_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/ipv6/nf_defrag_ipv6.h], [nf_defrag_ipv6_enable], [net], [OVS_DEFINE([HAVE_DEFRAG_ENABLE_TAKES_NET])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DEFRAG_ENABLE_TAKES_NET])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/genetlink.h], [family_list], [OVS_DEFINE([HAVE_GENL_FAMILY_LIST])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GENL_FAMILY_LIST])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device], [needs_free_netdev], [OVS_DEFINE([HAVE_NEEDS_FREE_NETDEV])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NEEDS_FREE_NETDEV])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/vxlan.h], [vxlan_dev], [cfg], [OVS_DEFINE([HAVE_VXLAN_DEV_CFG])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VXLAN_DEV_CFG])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_helper.h], [nf_conntrack_helper_put], [OVS_DEFINE(HAVE_NF_CONNTRACK_HELPER_PUT)])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONNTRACK_HELPER_PUT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [[[[:space:]]]SKB_GSO_UDP[[[:space:]]]], [OVS_DEFINE([HAVE_SKB_GSO_UDP])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_GSO_UDP])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/dst.h], [DST_NOCACHE], [OVS_DEFINE([HAVE_DST_NOCACHE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_DST_NOCACHE])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/rtnetlink.h], [rtnl_link_ops], [extack], [OVS_DEFINE([HAVE_EXT_ACK_IN_RTNL_LINKOPS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_EXT_ACK_IN_RTNL_LINKOPS])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netfilter.h], [nf_hook_ops], [list], [OVS_DEFINE([HAVE_LIST_IN_NF_HOOK_OPS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_LIST_IN_NF_HOOK_OPS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/netfilter/nf_conntrack_common.h], [IP_CT_UNTRACKED])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_CT_UNTRACKED])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/linux/netdevice.h], [netdev_master_upper_dev_link], [extack], [OVS_DEFINE([HAVE_UPPER_DEV_LINK_EXTACK])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_UPPER_DEV_LINK_EXTACK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/compiler_types.h], [__LINUX_COMPILER_TYPES_H], [OVS_DEFINE([HAVE_LINUX_COMPILER_TYPES_H])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_LINUX_COMPILER_TYPES_H])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/timekeeping.h], [ktime_get_ts64], [OVS_DEFINE([HAVE_KTIME_GET_TS64])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_KTIME_GET_TS64])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/net_namespace.h], [EXPORT_SYMBOL_GPL(peernet2id_alloc)], [OVS_DEFINE([HAVE_PEERNET2ID_ALLOC])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_PEERNET2ID_ALLOC])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/timekeeping.h], [ktime_get_ns], [OVS_DEFINE([HAVE_KTIME_GET_NS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_KTIME_GET_NS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/inet_frag.h], [frag_percpu_counter_batch], [OVS_DEFINE([HAVE_FRAG_PERCPU_COUNTER_BATCH])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_FRAG_PERCPU_COUNTER_BATCH])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [null_compute_pseudo], [OVS_DEFINE([HAVE_NULL_COMPUTE_PSEUDO])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NULL_COMPUTE_PSEUDO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [__skb_checksum_convert], [OVS_DEFINE([HAVE_SKB_CHECKSUM_CONVERT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_CHECKSUM_CONVERT])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device], [max_mtu], [OVS_DEFINE([HAVE_NET_DEVICE_MAX_MTU])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NET_DEVICE_MAX_MTU])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/ip6_tunnel.h], [__ip6_tnl_parm], [erspan_ver], [OVS_DEFINE([HAVE_IP6_TNL_PARM_ERSPAN_VER])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP6_TNL_PARM_ERSPAN_VER])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [SKB_GSO_IPXIP6], [OVS_DEFINE([HAVE_SKB_GSO_IPXIP6])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_GSO_IPXIP6])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ipv6.h], [ip6_make_flowlabel], [fl6], [OVS_DEFINE([HAVE_IP6_MAKE_FLOWLABEL_FL6])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP6_MAKE_FLOWLABEL_FL6])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/ipv6.h], [netns_sysctl_ipv6], [auto_flowlabels], [OVS_DEFINE([HAVE_NETNS_SYSCTL_IPV6_AUTO_FLOWLABELS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETNS_SYSCTL_IPV6_AUTO_FLOWLABELS])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [netif_keep_dst], [OVS_DEFINE([HAVE_NETIF_KEEP_DST])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NETIF_KEEP_DST])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/netdevice.h], [net_device_ops], [ndo_get_iflink], [OVS_DEFINE([HAVE_NDO_GET_IFLINK])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NDO_GET_IFLINK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_set_inner_ipproto], [OVS_DEFINE([HAVE_SKB_SET_INNER_IPPROTO])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_SET_INNER_IPPROTO])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [tunnel_encap_types], [OVS_DEFINE([HAVE_TUNNEL_ENCAP_TYPES])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_TUNNEL_ENCAP_TYPES])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_IPTUN_ENCAP_TYPE], [OVS_DEFINE([HAVE_IFLA_IPTUN_ENCAP_TYPE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_IPTUN_ENCAP_TYPE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_IPTUN_COLLECT_METADATA], [OVS_DEFINE([HAVE_IFLA_IPTUN_COLLECT_METADATA])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_IPTUN_COLLECT_METADATA])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_GRE_ENCAP_DPORT])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GRE_ENCAP_DPORT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_GRE_COLLECT_METADATA])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GRE_COLLECT_METADATA])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_GRE_IGNORE_DF])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GRE_IGNORE_DF])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_GRE_FWMARK])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GRE_FWMARK])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_GRE_ERSPAN_INDEX])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GRE_ERSPAN_INDEX])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_GRE_ERSPAN_HWID])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_GRE_ERSPAN_HWID])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/uapi/linux/if_tunnel.h], [IFLA_IPTUN_FWMARK])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IFLA_IPTUN_FWMARK])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/skbuff.h], [sk_buff], [csum_valid], [OVS_DEFINE([HAVE_SKBUFF_CSUM_VALID])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKBUFF_CSUM_VALID])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/linux/skbuff.h], [sk_buff], [vlan_present], [OVS_DEFINE([HAVE_SKBUFF_VLAN_PRESENT])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKBUFF_VLAN_PRESENT])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/skbuff.h], [skb_checksum_simple_validate])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_SKB_CHECKSUM_SIMPLE_VALIDATE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/netdevice.h], [void.*ndo_get_stats64], [OVS_DEFINE([HAVE_VOID_NDO_GET_STATS64])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_VOID_NDO_GET_STATS64])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/timer.h], [init_timer_deferrable], [OVS_DEFINE([HAVE_INIT_TIMER_DEFERRABLE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INIT_TIMER_DEFERRABLE])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/ip_tunnels.h], [ip_tunnel_info_opts_set], [flags], [OVS_DEFINE([HAVE_IP_TUNNEL_INFO_OPTS_SET_FLAGS])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_TUNNEL_INFO_OPTS_SET_FLAGS])
m4trace:configure.ac:189: -1- OVS_FIND_FIELD_IFELSE([$KSRC/include/net/inet_frag.h], [inet_frags], [rnd], [OVS_DEFINE([HAVE_INET_FRAGS_RND])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_INET_FRAGS_RND])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/overflow.h], [__LINUX_OVERFLOW_H], [OVS_DEFINE([HAVE_OVERFLOW_H])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_OVERFLOW_H])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/overflow.h], [struct_size], [OVS_DEFINE([HAVE_STRUCT_SIZE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_STRUCT_SIZE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/mm.h], [kvmalloc_array], [OVS_DEFINE([HAVE_KVMALLOC_ARRAY])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_KVMALLOC_ARRAY])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/mm.h], [kvmalloc_node], [OVS_DEFINE([HAVE_KVMALLOC_NODE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_KVMALLOC_NODE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_l3proto.h], [nf_conntrack_l3proto], [OVS_DEFINE([HAVE_NF_CONNTRACK_L3PROATO_H])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONNTRACK_L3PROATO_H])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_core.h], [nf_conntrack_in], [nf_hook_state], [OVS_DEFINE([HAVE_NF_CONNTRACK_IN_TAKES_NF_HOOK_STATE])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CONNTRACK_IN_TAKES_NF_HOOK_STATE])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/ipv6_frag.h], [IP6_DEFRAG_CONNTRACK_IN], [OVS_DEFINE([HAVE_IPV6_FRAG_H])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IPV6_FRAG_H])
m4trace:configure.ac:189: -1- OVS_FIND_PARAM_IFELSE([$KSRC/include/net/netfilter/nf_conntrack_helper.h], [nf_ct_helper_ext_add], [nf_conntrack_helper], [OVS_DEFINE([HAVE_NF_CT_HELPER_EXT_ADD_TAKES_HELPER])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_NF_CT_HELPER_EXT_ADD_TAKES_HELPER])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [gre_calc_hlen], [OVS_DEFINE([HAVE_GRE_CALC_HLEN])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_GRE_CALC_HLEN])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/net/gre.h], [ip_gre_calc_hlen], [OVS_DEFINE([HAVE_IP_GRE_CALC_HLEN])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_IP_GRE_CALC_HLEN])
m4trace:configure.ac:189: -1- OVS_GREP_IFELSE([$KSRC/include/linux/rbtree.h], [rb_link_node_rcu], [OVS_DEFINE([HAVE_RBTREE_RB_LINK_NODE_RCU])])
m4trace:configure.ac:189: -1- OVS_DEFINE([HAVE_RBTREE_RB_LINK_NODE_RCU])
m4trace:configure.ac:189: -1- AM_CONDITIONAL([LINUX_ENABLED], [test -n "$KBUILD"])
m4trace:configure.ac:189: -1- m4_pattern_allow([^LINUX_ENABLED_TRUE$])
m4trace:configure.ac:189: -1- m4_pattern_allow([^LINUX_ENABLED_FALSE$])
m4trace:configure.ac:189: -1- _AM_SUBST_NOTMAKE([LINUX_ENABLED_TRUE])
m4trace:configure.ac:189: -1- _AM_SUBST_NOTMAKE([LINUX_ENABLED_FALSE])
m4trace:configure.ac:190: -1- OVS_CHECK_LINUX_TC
m4trace:configure.ac:190: -1- m4_pattern_allow([^HAVE_TCA_FLOWER_KEY_ENC_IP_TTL_MASK$])
m4trace:configure.ac:190: -1- m4_pattern_allow([^HAVE_TCA_VLAN_PUSH_VLAN_PRIORITY$])
m4trace:configure.ac:190: -1- m4_pattern_allow([^HAVE_TCA_MPLS_TTL$])
m4trace:configure.ac:190: -1- m4_pattern_allow([^HAVE_TCA_TUNNEL_KEY_ENC_TTL$])
m4trace:configure.ac:190: -1- m4_pattern_allow([^HAVE_TCA_PEDIT_KEY_EX_HDR_TYPE_UDP$])
m4trace:configure.ac:190: -1- m4_pattern_allow([^HAVE_TCA_SKBEDIT_FLAGS$])
m4trace:configure.ac:191: -1- OVS_CHECK_LINUX_SCTP_CT
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_SCTP_CONNTRACK_HEARTBEATS$])
m4trace:configure.ac:192: -1- OVS_CHECK_DPDK
m4trace:configure.ac:192: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:207: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1492: AC_ARG_WITH is expanded from...
acinclude.m4:286: OVS_CHECK_DPDK is expanded from...
configure.ac:192: the top level])
m4trace:configure.ac:192: -1- PKG_CHECK_MODULES_STATIC([DPDK], [libdpdk], [
            DPDK_INCLUDE="$DPDK_CFLAGS"
            DPDK_LIB="$DPDK_LIBS"], [
            DPDK_INCLUDE="-I/usr/local/include/dpdk -I/usr/include/dpdk"
            DPDK_LIB="-ldpdk"])
m4trace:configure.ac:192: -1- PKG_CHECK_MODULES([DPDK], [libdpdk], [
            DPDK_INCLUDE="$DPDK_CFLAGS"
            DPDK_LIB="$DPDK_LIBS"], [
            DPDK_INCLUDE="-I/usr/local/include/dpdk -I/usr/include/dpdk"
            DPDK_LIB="-ldpdk"])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_CFLAGS$])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_LIBS$])
m4trace:configure.ac:192: -1- PKG_CHECK_EXISTS([libdpdk], [pkg_cv_[]DPDK_CFLAGS=`$PKG_CONFIG --[]cflags "libdpdk" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:192: -1- PKG_CHECK_EXISTS([libdpdk], [pkg_cv_[]DPDK_LIBS=`$PKG_CONFIG --[]libs "libdpdk" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:192: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:192: -1- m4_pattern_allow([^HAVE_RTE_CONFIG_H$])
m4trace:configure.ac:192: -1- m4_pattern_allow([^HAVE_DECL_RTE_LIBRTE_VHOST_NUMA$])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([get_mempolicy], [numa], [libnuma])
m4trace:configure.ac:192: -1- m4_pattern_allow([^HAVE_DECL_RTE_EAL_NUMA_AWARE_HUGEPAGES$])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([get_mempolicy], [numa], [libnuma])
m4trace:configure.ac:192: -1- m4_pattern_allow([^VHOST_NUMA$])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([pcap_dump], [pcap], [libpcap])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_PDUMP$])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([mnl_attr_put], [mnl], [libmnl])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([mlx5dv_create_wq], [mlx5], [libmlx5])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([verbs_init_cq], [ibverbs], [libibverbs])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([mlx4dv_init_obj], [mlx4], [libmlx4])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([verbs_init_cq], [ibverbs], [libibverbs])
m4trace:configure.ac:192: -1- OVS_FIND_DEPENDENCY([dlopen], [dl], [libdl])
m4trace:configure.ac:192: -1- OVS_ENABLE_OPTION([-mssse3])
m4trace:configure.ac:192: -1- OVS_CHECK_CC_OPTION([-mssse3], [WARNING_FLAGS="$WARNING_FLAGS -mssse3"])
m4trace:configure.ac:192: -1- _OVS_CHECK_CC_OPTION([-mssse3], [WARNING_FLAGS="$WARNING_FLAGS -mssse3"], [])
m4trace:configure.ac:192: -1- m4_pattern_allow([^WARNING_FLAGS$])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_vswitchd_LDFLAGS$])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_NETDEV$])
m4trace:configure.ac:192: -1- AM_CONDITIONAL([DPDK_NETDEV], [test "$DPDKLIB_FOUND" = true])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_NETDEV_TRUE$])
m4trace:configure.ac:192: -1- m4_pattern_allow([^DPDK_NETDEV_FALSE$])
m4trace:configure.ac:192: -1- _AM_SUBST_NOTMAKE([DPDK_NETDEV_TRUE])
m4trace:configure.ac:192: -1- _AM_SUBST_NOTMAKE([DPDK_NETDEV_FALSE])
m4trace:configure.ac:193: -1- OVS_CHECK_PRAGMA_MESSAGE
m4trace:configure.ac:193: -1- m4_pattern_allow([^HAVE_PRAGMA_MESSAGE$])
m4trace:configure.ac:194: -1- m4_pattern_allow([^OVS_CFLAGS$])
m4trace:configure.ac:195: -1- m4_pattern_allow([^OVS_LDFLAGS$])
m4trace:configure.ac:217: -1- AM_SILENT_RULES
m4trace:configure.ac:217: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:217: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:217: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:217: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:217: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:217: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:217: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:217: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:217: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:219: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:219: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:219: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:219: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:219: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:219: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:219: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:219: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:219: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
